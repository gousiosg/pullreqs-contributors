,x,tag1,tag2,tag3,social,tools and model,code,noteworthy
1,Knowing whether my feature is desirable in the larger community,big picture,predicting acceptance,,1,,,
2,Solving the problem the right way with small pull requests.,self contained,,,,,1,
3,Understanding the existing codebase.,understanding code base,,,,,1,
4,,,,,,,,
5,,,,,,,,
6,See my previous answer.,,,,,,,
7,Making sure the contribution is actually wanted. (usually ask on irc for this),big picture,communication,,1,,,1
8,Sometimes it takes time to understand how existent unit cases work.,understanding code base,,,,,1,
9,,,,,,,,
10,getting to know the project,understanding code base,,,,,1,
11,,,,,,,,
12,,,,,,,,
13,"The code reviews are long and usually require a lot of changes. Sometimes, it can take several months to get a PR in.",code review,extra work,,1,,,
14,none,,,,,,,
15,"The owner of the repo doesn't ever respond to the pull request, and leaves it hanging open forever.",responsiveness,,,1,,,
16,,,,,,,,
17,,,,,,,,
18,Small projects where the maintainer is mostly inactive.,responsiveness,,,1,,,
19,,,,,,,,
20,,,,,,,,
21,"I didn't face that, but I know people scared to open pull requests because the fear of being refused.",fear of rejection,,,1,,,
22,,,,,,,,
23,Deciding when to call it ready vs. adding more to the same pull request.,self contained,,,,,1,
24,,,,,,,,
25,When the maintainer does not respond,responsiveness,,,1,,,
26,"git wise, none. Just the code has to be good.",code quality,,,,,1,
27,Waiting for repo owners response. I want to get feedback asap.,responsiveness,,,1,,,
28,"Only understanding a tiny portion of the codebase (specifically, the part where I'm making my change)",understanding code base,,,,,1,
29,learn the guidelines,project compliance,,,1,,,
30,,,,,,,,
31,"Clarifying intention of submission, convincing reviewer of validity of submission, resolving merge conflicts",explain rationale,communication,conflicts,1,1,,
32,Knowing guidelines to submit.,project compliance,,,1,,,
33,"It's not easy to see which ones have been updated most recently on the website, and seaching is a pain in the arse.",awareness,,,,1,,1
34,Getting reviews,responsiveness,code review,,1,,,
35,"getting things like test frameworks running locally, figuring out how to write a unit test in framework X (some of us mere mortals struggle with writing tests)",infrastructure setup,testing,,,1,,
36,managing conflicts with other open pull requests or ongoing development in other forks and feature branches,awareness,conflicts,,,1,,
37,,,,,,,,
38,,,,,,,,
39,"Some projects lack an active maintainer, so pull requests are ignored or take a lot of pushing before they're reviewed.",responsiveness,,,1,,,
40,"Following the project's conventions for target branch, code conventions, etc...",project compliance,,,1,,,
41,,,,,,,,
42,,,,,,,,
43,"Pull requests that are never merged, reviewed or rejected. Requested features of sound process and intent talking too long, or otherwise never being accepted into the code",responsiveness,project compliance,extra work,1,,,
44,,,,,,,,
45,Project owners have too little time to review the PRs.,responsiveness,,,1,,,
46,,,,,,,,
47,,,,,,,,
48,Code guidelines sometimes hard to follow,project compliance,,,1,,,
49,sometimes large test suite,testing,,,,,1,
50,"Not being super git-savvy or very GitHub-savvy, I'm afraid of messing up and do something wrong, which can cause problems/frustrations/discomfort when trying to formalize a Pull Request.",git,pull-based model,,,1,,
51,Make them noticed and reviewed.,responsiveness,,,1,,,1
52,Get in touch with the devs and get into the code base (in case it is huge).,communication,understanding code base,,1,,1,
53,,,,,,,,
54,Explaining why your change is valuable for you and can benefit the entire community,explain rationale,big picture,,1,,,
55,Merge conflicts.,conflicts,,,,1,,
56,,,,,,,,
57,"high response time for comments/feedback on pull requests   and politics (it differs from person to person):  For example if a reviewer A with wilful mind is responsible for an unfortunate design decision which leads to bug shadowing, it is hardly possible to revert it by a pull request due unwillingness of A to admit his mistake.",responsiveness,divergent opinions,,1,,,
58,Merge conflicts (occasionally) and dealing with many pull-specific topic branches.,conflicts,awareness,,,1,,
59,Occasional need for challenging rebasing.,conflicts,,,,1,,
60,understanding the scope of my changes,impact analysis,,,1,,,
61,Having the project core team's time to review your changes.,responsiveness,,,1,,,
62,Not knowing all the rules/process,project compliance,,,1,,,
63,,,,,,,,
64,Accidental mistakes.,code quality,,,,,1,
65,Understanding intent of source code can be difficult due to lack of clarity or documentation,understanding code base,,,,,1,
66,Using the project code style,project compliance,,,,,1,
67,Getting people to do good reviews,code review,,,1,,,
68,,,,,,,,
69,Lack of response to pull requests.,responsiveness,,,1,,,
70,To make pull request correct.,pull-based model,,,,1,,
71,,,,,,,,
72,Describing what I've done,explain rationale,,,1,,,
73,Language difficulties when discussing issues (not everyone has English as a first language),communication,,,1,,,
74,,,,,,,,
75,"(Not relating to github, but to another large open-source project I have contributed to). Reviewers will insist that you do additional work unrelated to the ""beginner"" size of the given task for purposes of refactoring or increasing security. This causes me to drop the thing entirely.",extra work,,,1,,,
76,To put my code out there to be reviewed by others? which is also the biggest advantage.,fear of rejection,,,1,,,
77,,,,,,,,
78,,,,,,,,
79,,,,,,,,
80,Communication / coordination. Would my changes be accepted? Would there be anyone to review them? Would they fit the project well? Do I really have enough time to work on them? ;-),communication,responsiveness,predicting acceptance,1,,,
81,,,,,,,,
82,Communicating my changes to the project maintainers.,explain rationale,,,1,,,
83,,,,,,,,
84,Slow processing due to lack of hands.,responsiveness,,,1,,,
85,It would be nice to have an indication in advance whether a pull request would be well received; it's annoying to go to the effort of making one and have it ignored... Rejected is better.,responsiveness,predicting acceptance,,,1,,1
86,,,,,,,,
87,aligning time-wise with the reviewer,time,,,1,,,
88,Project owner too busy to take pull requests in a timely manner,responsiveness,,,1,,,
89,,,,,,,,
90,"Nothing comes to mind. I contribute things that I feel missing or that I need. If the maintainer(s) don't agree, it's their prerogative.",,,,,,,
91,Social interaction. Most of the time it's easier to just start programming before even looking up anything.,awareness,,,1,,,
92,Regressions - it is sometimes hard to understand the full complexity of the code so you need to be very careful with testing.,understanding code base,testing,,,,1,
93,Dont know,,,,,,,
94,,,,,,,,
95,,,,,,,,
96,,,,,,,,
97,,,,,,,,
98,projects with lots of open pull requests and few actually being accepted,responsiveness,,,1,,,1
99,When they go into limbo because the project committers are busy with other code.,responsiveness,,,1,,,
100,"Communicating the motivation for the change, especially when not working face to face with people.",explain rationale,communication,,1,,,
101,,,,,,,,
102,The comments on a PR can get unwieldy quickly.  Without threading it can be hard to follow a conversation.,github,communication,,,1,,1
103,,,,,,,,
104,Getting someone to review in a timely fashion.,responsiveness,,,1,,,
105,Knowing who to notify.,awareness,,,1,,,1
106,Fear that my code is not good enough.,fear of rejection,,,,,1,
107,don't be afraid of constructive critics    code ownership is evil because you may take things to personal,fear of rejection,,,1,,,
108,,,,,,,,
109,"Old trackers, and self pride",fear of rejection,,,1,,,
110,"The social part of doing open source, going into IRC channels and talk to the core developers, interact with them and do the politics part of open source development.",communication,politics,,1,,,
111,,,,,,,,
112,In-band communication within the pull request is insufficient for discussing major design changes that might be needed in a new feature.,github,communication,,,1,,1
113,,,,,,,,
114,,,,,,,,
115,,,,,,,,
116,,,,,,,,
117,Nothing,,,,,,,
118,,,,,,,,
119,Coding.,code quality,,,,,1,
120,"when projects try to enforce workflow thru branches, that is often confusing.",project compliance,,,,1,,
121,Getting my way of thinking (different background) to match with that of the project in terms of implementing features.,project compliance,,,1,,,
122,Project owners who really don't want contributions.,politics,,,1,,,
123,"Sometimes they just languish there, the maintainer is busy or something.",responsiveness,,,1,,,
124,Don't have it reviewed or merged for a long time.,responsiveness,,,1,,,
125,if that's good or not,predicting acceptance,,,,,1,
126,,,,,,,,
127,"Sometimes it's slow to get pull requests ""signed off"" but this is the nature of open source with singe owners.",responsiveness,,,1,,,
128,,,,,,,,
129,,,,,,,,
130,to many heads with unclear function. Aborted heads should be closed.,git,,,,1,,
131,,,,,,,,
132,,,,,,,,
133,None,,,,,,,
134,,,,,,,,
135,,,,,,,,
136,,,,,,,,
137,Inactivity.,responsiveness,,,1,,,
138,,,,,,,,
139,,,,,,,,
140,,,,,,,,
141,,,,,,,,
142,,,,,,,,
143,,,,,,,,
144,,,,,,,,
145,Facing nazi project maintainers.,politics,,,1,,,
146,Having people look at them if they're not super important to the things that they're currently doing.,responsiveness,,,1,,,
147,,,,,,,,
148,,,,,,,,
149,Lack of trust regarding actual mission of a project.,big picture,politics,,1,,,
150,"The procedure, it's easier to just send a patch",pull-based model,,,,1,,
151,No particular issues.,,,,,,,
152,,,,,,,,
153,people who change their mind midway,divergent opinions,,,1,,,
154,PR's that take a long time to get reviewed / merged need to have 'master' merged into them often which can be a painful process.,responsiveness,conflicts,,1,1,,
155,,,,,,,,
156,Understanding code,understanding code base,,,,,1,
157,,,,,,,,
158,"Usage of git is not intuitive. Especially for me as ""casual developer"" (who does not contribute regularly) it is every time a challenge to branch, pull current version, resolve conflicts, etc...",git,conflicts,,,1,,
159,,,,,,,,
160,,,,,,,,
161,1)Some times Builds are taking too much time.    2) Some reviews are not clear.  3) Did not get quick response in some case.,testing,communication,responsiveness,1,1,,
162,not knowing the project well enough,understanding code base,project compliance,,,,1,
163,"To maintain the consistency of the project. When many contributors contribute to the same project, it is challenging to avoid creating inconsistencies (e.g API inconsistencies)",project compliance,,,1,,,
164,,,,,,,,
165,,,,,,,,
166,,,,,,,,
167,When nothing happens for a long time,responsiveness,,,1,,,
168,,,,,,,,
169,Knowing how the maintainer will react.,predicting acceptance,,,1,,,
170,,,,,,,,
171,"sometimes my pull requests can grow large in scope, and/or depend on another pull request before it can work properly",self contained,,,,,1,
172,,,,,,,,
173,PRs going stale or not being responded to until I have mentally moved on.,responsiveness,,,1,,,
174,When I wrote a code that is better than reviewer's idea but sometimes it takes too many change in whole code. It comes from wrong design.,code quality,,,,,1,
175,testing,testing,,,,,1,
176,,,,,,,,
177,,,,,,,,
178,"Consolidate recurrences of a given request, especially when there are 2 or more issues addressed within a same pull request.",self contained,,,,1,,
179,Getting feedback or contact from the repo owner.,responsiveness,,,1,,,
180,Waiting for response. Learning the codebase. Trying to find a way to change the code in a way that doesn't hurt the architecture/design of the project.,responsiveness,understanding code base,project compliance,1,,1,
181,,,,,,,,
182,,,,,,,,
183,Making sure it's in the interest of the project and not just mine.,big picture,,,1,,,
184,"Git itself can be a frustrating and painful tool to work with.  Lack of response from project maintainers, or rejection of a feature that many people have voiced support for.",git,responsiveness,divergent opinions,1,1,,
185,git workflow (still learning it to use well),git,,,,1,,
186,Lack of active users not managing a useful project.,responsiveness,,,1,,,
187,Navigating through forks of an abandoned project to see if someone implemented that already.,conflicts,awareness,,,1,,1
188,,,,,,,,
189,Finding time to work on these things,time,,,1,,,
190,Fear of looking stupid. Fear of rude response.,fear of rejection,egotism,,1,,,
191,,,,,,,,
192,,,,,,,,
193,Slow response from project owner,responsiveness,,,1,,,
194,"Getting the codebase working locally in a state to make changes (buildable, tests passing, manually runnable when applicable)",infrastructure setup,,,,1,,
195,,,,,,,,
196,,,,,,,,
197,Responsiveness of project owners,responsiveness,,,1,,,
198,help others,,,,,,,
199,Lack of free time.,time,,,1,,,
200,,,,,,,,
201,Non GIit/GitHub based projects.. ;),,,,,,,
202,Ensuring that my pull request doesn't have unintended side effects due to not being intimately familiar with the entire code base.,impact analysis,understanding code base,,,,1,
203,"No challenges, it's actually very convenient.",,,,,,,
204,"- keeping up with changes in repository layout or project structure (splits, renames)",project compliance,,,,,1,
205,,,,,,,,
206,,,,,,,,
207,,,,,,,,
208,,,,,,,,
209,"When people ask me to rebase and squash commits, I tend to give up on PRs. Not worth it.",extra work,,,1,,,
210,,,,,,,,
211,To find out whether my pull request is good enough to be merged or not.,predicting acceptance,,,,,1,
212,,,,,,,,
213,Lack of any response from project owners.,responsiveness,,,1,,,
214,none,,,,,,,
215,Convincing project leaders that my the problem I found is important and my solution is right.,explain rationale,,,1,,,
216,Project owner's free time to review and merge the request.,responsiveness,,,1,,,
217,Describing why the change is needed or why I changed something.,explain rationale,,,1,,,
218,Lack of time,time,,,1,,,
219,,,,,,,,
220,,,,,,,,
221,,,,,,,,
222,,,,,,,,
223,"Complexity of code (no guidelines or documentation), and getting the maintainers to actually merge it.",understanding code base,explain rationale,,1,,1,
224,,,,,,,,
225,,,,,,,,
226,bugs beyond unit testing,code quality,,,,,1,
227,,,,,,,,
228,Discouraging project owners,fear of rejection,,,1,,,
229,"Because of the great complexity of our code, contributions by others that are not directly related to my work can nonetheless affect it, and our contributions are not necessarily synced or communicated.",impact analysis,awareness,,1,,1,
230,,,,,,,,
231,"Lack of interest by core committers. For example if my PR doesn't interest one of the core committers of Django, there will be no reply for months. This is a huge negative influencer to me, I will think twice before working on the Django project.    For my own project where PR are submitted, the biggest challenge is providing a timely response. Also enforcing contributors to submit test code is sometimes challenging as some contributors don't see the need for unit tests.",responsiveness,politics,testing,1,,,
232,Git is hard system,git,,,,1,,
233,,,,,,,,
234,Knowing how to match coding style,project compliance,,,,,1,
235,Contributing a pull request and hearing nothing for months,responsiveness,,,1,,,
236,It could take some time to get feedback on the PR. That is understandable but would be better if avoided as it might slow the flow down.,responsiveness,,,1,,,
237,,,,,,,,
238,"The biggest challenge I usually face is ungratefulness. I've never experienced that with ajaxorg but I've run into it from a couple other groups. When I come up with some solution to a bug or implement a feature that I wanted, then I share that through a pull request, I don't really need some rude response about my use of ""tabs vs spaces"" or other gripes. I'm always open to polite requests that I change things in my pull request to make it easier for devs to use and they're often easy enough to follow through with. It's when I'm being talked to like an insubordinate employee that I really lose interest in contributing. I realize that sometimes people don't know that they sound like assholes so I try to give them the benefit of doubt but, a good paper on maximizing the return on pull requests would definitely emphasize being aware of writing style and social interactions.",egotism,,,1,,,1
239,dunno,,,,,,,
240,,,,,,,,
241,"Git's rebase tool can be very unintuitive. Telling people ""Please rebase on current master"" can be a death sentence for new contributors, if they weren't using a GUI frontend. Even with experience I still dread merge conflicts.",git,conflicts,,,1,,
242,fear of rejection (for new projects when you have no relationship with the other contributors),fear of rejection,,,1,,,
243,Uncertainty about how my change fits with the near-to-medium term future of the project. (I can reasonably well gauge how it fits with the *present*.),predicting acceptance,big picture,,,,1,
244,,,,,,,,
245,,,,,,,,
246,Not knowing if my pull request is accepted.,predicting acceptance,,,1,,,
247,My personal ineptitude with git to get the change history correct.,git,,,,1,,
248,None.  Outside issue trackers (i.e. JIRA) and other forms of communication are used before making pull requests.,,,,,,,
249,Integrating pull requests with windows was odd - ended up finding some ruby script to do it,github,,,,,,
250,,,,,,,,
251,The biggest challenge is getting all the contributors to agree with a feature you purpose in a pull request. Some pull requests result in loong discussion before everyone accepting the proposal.,divergent opinions,responsiveness,,1,,,
252,,,,,,,,
253,,,,,,,,
254,"Sometimes developers argue over tiny things (implementation details), which can hold up the merge. Some developers submit many small PRs while others submit catch-alls, which can also be troublesome.",communication,self contained,,1,,,
255,"My pull request conflicting with other pull requests and changes that have been made in the same field. Also, having to update code solutions I create to be compatible with changes that have been made to the project.",conflicts,awareness,,,,1,
256,,,,,,,,
257,,,,,,,,
258,Learning the project,understanding code base,,,,,1,
259,,,,,,,,
260,,,,,,,,
261,Pull requests are not merged timely and left open until merge conflict emerges.,responsiveness,conflicts,,1,,,
262,,,,,,,,
263,bad maintainership,politics,,,1,,,
264,,,,,,,,
265,That they are ignored,responsiveness,,,1,,,
266,,,,,,,,
267,Someone will have done the work before I finished.,awareness,,,1,,,
268,,,,,,,,
269,Difference of opinion in problem solving.,divergent opinions,,,1,,,
270,None.,,,,,,,
271,Guess whether the fix/feature will be accepted upstream by the core team.,predicting acceptance,,,1,,,
272,"When doing multiple pull requests, or a single pull request against a repository with many other on going pull requests, there's often a need to rebase the code, which can in turn forces me to do a more comprehensive review, wasting time, during which another pull request may cause the same problem. The cycle can potentially go on forever, though so far, I've managed to only need a single rebase per pull request.",awareness,conflicts,extra work,,1,,1
273,,,,,,,,
274,,,,,,,,
275,,,,,,,,
276,If the project rarely accepts submissions. I've had requests accepted only because huge numbers of users complained if they didn't accept it.,politics,,,1,,,
277,"Unsure of code style, pull requests format, commit message formats, etc.",project compliance,,,,,1,
278,Understanding and resolving the problem I'm working on.,code quality,,,,,1,
279,,,,,,,,
280,,,,,,,,
281,No response from the project owner.,responsiveness,,,1,,,
282,When there is nobody around to review them & no way to ask questions of the committers/maintainers,responsiveness,communication,,1,,,
283,responsiveness. differences of opinion.,responsiveness,divergent opinions,,1,,,
284,Inactive maintainers.  E.g. substack decided to shirk node- optimist for over a year until someone forked it and took over maintenance.,responsiveness,,,1,,,
285,,,,,,,,
286,Communication. Transmitting ideas correctly accross distances and languages is hard many times.,communication,,,1,,,
287,To never know if it's worth to use time to a feature that will maybe refused (even not reviewed),predicting acceptance,,,1,,,
288,,,,,,,,
289,,,,,,,,
290,- Waiting time before someone merges manually  - Finding the right branches for both repos,responsiveness,awareness,,1,,,
291,Getting buy-in from the project leader.  He's very busy and seems to initially dismiss most ideas that weren't his.,responsiveness,egotism,,1,,,1
292,,,,,,,,
293,Writing the code and understanding the internals of the project.,understanding code base,,,,,1,
294,Code review,code review,,,1,,,
295,,,,,,,,
296,,,,,,,,
297,"To understand the internal api and find the ""place"" where your feature or fix needs to be.",understanding code base,,,,,1,
298,Running test if any,testing,,,,,1,
299,Cockyness,egotism,,,1,,,
300,Fitting into larger project path.,big picture,,,1,,1,
301,,,,,,,,
302,,,,,,,,
303,English language and geek jargon misunderstanding,communication,,,1,,,
304,communication. I have hard time figuring out what project owners want.,communication,big picture,,1,,,
305,Uncertainty about the code having the required code standards.,project compliance,,,,,1,
306,,,,,,,,
307,,,,,,,,
308,,,,,,,,
309,,,,,,,,
310,Stick to code style,project compliance,,,,,1,
311,,,,,,,,
312,long time review process,responsiveness,,,1,,,
313,No code review process makes small fixes slow.,code review,,,1,,,
314,"No guidance on what will be accepted, no guidance on  where to ask if a feature would be acceptable to the project core team before coding it.",communication,predicting acceptance,,1,,,
315,,,,,,,,
316,"I'm not a programmer, only amateur...",personal skills,,,,,1,
317,"code complexity, god objects, lack of tests, general lack of best practices",understanding code base,project compliance,testing,1,,1,
318,None,,,,,,,
319,None.,,,,,,,
320,Keeping my local branch aligned with a fast moving project trunk,conflicts,,,,,1,
321,,,,,,,,
322,"I think the pull request was easy (enough), but I have a lot of experience at hand with Hg (mercurial).",,,,,,,
323,"Project leader/maintainer personalities. I've been turned off by quite a few projects in which I had an interest. Interestingly, this tends to occur when submitting PRs or patches.",politics,,,1,,,1
324,,,,,,,,
325,"Don't ruin things. :-)  We have a nice example of that currently, the Heartbleed bug!",impact analysis,,,,,1,
326,,,,,,,,
327,"If a project is pushing and merging very fast against the master branch, then some thinking should be done before diving in and raising merge complexity for even simple changes.",conflicts,,,,1,,
328,,,,,,,,
329,Finding the time to write the code and effectively communicating with other users over github about potential approaches for code. Text-based communicating itself is not the best way to describe a potential code architecture and can often be confusing.,time,explain rationale,communication,,1,,1
330,Pace of other projects.  Often I would like a pull request in but the rate at which they accept them is too slow.,responsiveness,,,1,,,
331,,,,,,,,
332,Relatively few. I'm often contributing to repositories where I'm either already a committer or I'm the maintainer.,,,,,,,
333,Fixing conflicts after merging.,conflicts,,,,1,,
334,,,,,,,,
335,lack of response from developers,responsiveness,,,1,,,
336,Making sure someone actually sees them.,responsiveness,,,1,,,
337,Make sure my changes not break any other features.,impact analysis,,,,,1,
338,"Preparing a ""nice"" pull request is time consuming. eg: docs, testing ... Since most of the time it's spare time, ... it's valuable time.",time,,,,,1,
339,Hmm.. I think it's to discover new themes. Sometimes you need to discover several new themes.,,,,,,,
340,Rebase of long-libing PRs if often painful,conflicts,,,,1,,
341,I'm an inexperienced programmer,personal skills,,,,,1,
342,"Adapting to each project coding style and ""ways""",project compliance,,,,,1,
343,setting up dev environment on my laptop,infrastructure setup,,,,,1,
344,,,,,,,,
345,,,,,,,,
346,,,,,,,,
347,"I would like to contribute to rails/rails, but the test suite is a bit daunting.",testing,,,,,1,
348,Getting to the style the core team likes ;-),project compliance,,,,,1,
349,waiting for acceptance,responsiveness,,,1,,,
350,,,,,,,,
351,,,,,,,,
352,Making sure the change is well thought out and non-breaking.,impact analysis,,,,,1,
353,Coding style changes per coder,project compliance,,,1,,,
354,Coding style guidelines. Request specific coding style will reduce the number of contributors but make the code more suitable to read.,project compliance,,,,,1,
355,,,,,,,,
356,"Continuous Integration test suites as used on GitHub are unreliable and don't take simultaneous pull requests into account. e.g., if PR A and PR B are incompatible, this can happen: PR A passes the test, PR B passes the tests, PR A is merged, PR B is merged. Now master is broken but we only merged things that Travis CI said were OK. To fix this GitHub would need to implement some kind of conditional merge system.",github,,,,1,,1
357,"Commit history: each project has its own usage when it comes to taking review comments into accounts: pile-up commits, amend/squash commits, rebase on top of master.    GitHub makes the former easier to review, when the latter makes the project commit history cleaner and easier to navigate (useful sometimes when debugging, and always enlightening)",github,,,,1,,
358,,,,,,,,
359,"Unresponsive repository owner; conflicts with coding style in original code (trailing whitespace, tab indentation, etc.)",responsiveness,project compliance,,1,,,
360,"People tend to merge only pull requests for issues THEY see as bug. If you have a severe issue and they don't see it, they will not merge without doing further research. Bottom line: It does not work their way.",egotism,,,1,,,
361,Sometimes it is hard to find to proper way of sending the patch/PR.,github,,,,1,,
362,,,,,,,,
363,Making sure it doesn't break anything.,impact analysis,,,,,1,
364,To comply to others' expectations.  For a newbie contributor the answer is the GIT. :),project compliance,git,,,1,,
365,,,,,,,,
366,,,,,,,,
367,,,,,,,,
368,,,,,,,,
369,,,,,,,,
370,,,,,,,,
371,Getting responses in a timely manner (less than 6 months).,responsiveness,,,1,,,
372,,,,,,,,
373,To come up with good quality code that works and is efficient.,code quality,,,,,1,
374,,,,,,,,
375,,,,,,,,
376,Many months of waiting for the merge.,responsiveness,,,1,,,
377,"When project maintainers do not communicate, it's very difficult to know what - if any - be  wrong with the code.",responsiveness,communication,,1,,,
378,,,,,,,,
379,,,,,,,,
380,Explaining the rationale for a proposed change.,explain rationale,,,1,,,
381,I don't face issues with contributing with Perl requests.,,,,,,,
382,,,,,,,,
383,,,,,,,,
384,,,,,,,,
385,,,,,,,,
386,get consents with the project owner in the initial contribution phase (the first few commits),,,,,,,
387,Same opinion on given subject between me and maintainer.,divergent opinions,,,1,,,
388,Am relatively new to programming and its hard to find a issue that's ranked by some sort of difficulty metric. It would be awesome if issues were ranked by either the typical years of experience you need to solve this kind of issue or some other metric. It takes a long time to find a issue,,,,,,,
389,Slow reviews,responsiveness,,,1,,,
390,none in particular,,,,,,,
391,"Different level of experience, language barriers",communication,,,1,,,
392,convincing project owner,divergent opinions,,,1,,,
393,Not getting response,responsiveness,,,1,,,
394,Having my code deeply reviewed: project leaders have scarce spare time,responsiveness,,,1,,,
395,Not knowing whether the project owner will get to the PR to evaluate and merge it in a timely manner.,responsiveness,,,1,,,
396,,,,,,,,
397,,,,,,,,
398,same as 18: some projects maintained by only one person who are not very available of reviewing the requests,responsiveness,,,1,,,
399,,,,,,,,
400,,,,,,,,
401,Understanding new codebases.,understanding code base,,,,,1,
402,,,,,,,,
403,,,,,,,,
404,"missing guidelines, unclear or non-existant test procedures",project compliance,testing,,,,1,
405,Preparing clear and vlean pull-request,code quality,self contained,,,,1,
406,"Being volatile, when some of my PRs need something more, I tend to push them back to my ""TODO"" list.    The one major problem to me is that you have to replicate your local repository (the one on your computer) with the one on Github, synchronize branches at all times, etc..     Most of the time the Github fork is just a proxy between upstream repo and my local repo.",extra work,,,,1,,
407,understanding the codebase,understanding code base,,,,,1,
408,,,,,,,,
409,"Decide whether feature I am contributing is important enough to be in the project code, or is very specific to my needs.",predicting acceptance,big picture,,1,,,
410,Matching my coding style to the project's,project compliance,,,,,1,
411,"Finding how they are handled by the project. It's 100% ok for each project to have its own way to handle PR. However, there is not always a CONTRIBUTING file explaining everything.",project compliance,,,,1,,
412,not enough time,time,,,1,,,
413,"not knowing ""the big picture"" and how to get started propery so that you are later not frowned upon :)",understanding code base,big picture,,,,1,1
414,,,,,,,,
415,,,,,,,,
416,,,,,,,,
417,Some people will commit the same change that you offer in your PR rather than merging yours. This is egoistic and bad behavior imo.,egotism,,,1,,,
418,"No setup instructions  Not enough existing tests  Indecesive maintainers, community not involved in decisions",project compliance,testing,politics,1,,,
419,Understaning some other code mess.,understanding code base,,,,,1,
420,,,,,,,,
421,,,,,,,,
422,Work with people asking for a much higher quality in pull requests than in their own code,egotism,extra work,,1,,,
423,Figuring out how to adequately format the commit to remove any merge commits etc from the pull request.,github,,,,,1,
424,,,,,,,,
425,"Not having them merged quickly, leading me to work on many pull request at the same time, and managing long lasting pull requests.",responsiveness,,,1,,,
426,Fixing conflicts  obviously,conflicts,,,,1,,
427,I don't think my code would be accepted since someone would do better.,personal skills,,,1,,,
428,,,,,,,,
429,,,,,,,,
430,Git,git,,,,1,,
431,Meeting the code standarts - convincing about a new feature,project compliance,explain rationale,,1,,1,
432,Getting the pull request reviewed. It can take weeks for someone to review it.,responsiveness,,,1,,,
433,,,,,,,,
434,No real challenge...,,,,,,,
435,,,,,,,,
436,creating patches that are fitting for a general audience and not just scratch my itch,big picture,,,1,,,
437,"No reaction of the project leads when asking questions.  Not using Maven as the build tool, or not having all dependencies in the POM.  Using other tools besides JDK.  Using non-open-source libraries.",responsiveness,politics,,1,1,,
438,,,,,,,,
439,"Almost always PRs need maintenance (addressing comments, rebasing, etc). This usually doesn't take much time, but when you have a lot of PRs (e.g. around a dozen), it starts getting old VERY quickly. This gets exacerbated if PRs are stuck in the queue for long. No idea how it can be fixed, but that's essentially my only gripe.",responsiveness,extra work,,,1,,
440,"Unclear acceptance criteria, messy/difficult to run test suites",predicting acceptance,testing,,1,,1,
441,,,,,,,,
442,Dealing with desired git workflow.,project compliance,,,,1,,
443,,,,,,,,
444,Fear of not getting merged.,fear of rejection,,,1,,,
445,"Typically don't have many, other than the scenario described above",,,,,,,
446,"If a repository has just one or two people that control it, I am at their mercy.  If they don't communicate adequately, it's hard to stay motivated to contribute.",politics,communication,,1,,,
447,Finding something worthwhile to contribute.,big picture,,,,,1,
448,Being disciplined enough and monitoring the work of others to avoid duplicates.,awareness,,,1,,,
449,,,,,,,,
450,,,,,,,,
451,"Often times the project owner will misunderstand, or quickly dismiss, a pull request.",explain rationale,,,1,,,
452,,,,,,,,
453,,,,,,,,
454,,,,,,,,
455,Finding time for it,time,,,1,,,
456,Unresponsive maintainers,responsiveness,,,1,,,
457,"Wondering whether my work is ""done"" enough. It has helped to have a culture of submitting tentative pull requests and letting them ""cook"" (i.e. treat a pull request as a point for discussion).",predicting acceptance,,,,,,1
458,Time and priority of the maintainer.,responsiveness,time,,1,,,
459,,,,,,,,
460,Have the pull request ready before the next release.,responsiveness,,,1,,,
461,Time to work on complicated issues despite working full time.,time,,,1,,,
462,To understand the project layout and architecture,understanding code base,,,,,1,
463,none,,,,,,,
464,,,,,,,,
465,,,,,,,,
466,Large repo.,understanding code base,,,,,1,
467,,,,,,,,
468,"Managing merge conflicts, and then rebasing - I always seem to get it wrong with git.",conflicts,git,,,1,,
469,,,,,,,,
470,"if tests are missing, and even then, it can be difficult to know whether a change is really valid - how it perhaps affects some other part of the system that am not even aware of (if it's a foreign project) etc.",testing,impact analysis,,,,1,
471,Big backlog of other pullreqs which may get merged before mine and need to be manually rebased into my work.,responsiveness,conflicts,,1,1,,
472,,,,,,,,
473,"It is hard to be sure I'm not breaking something.  The projects I work on do not have very good test coverage.  We use Travis to run automated tests, but they only cover a tiny bit of our code.",impact analysis,testing,,,,1,
474,,,,,,,,
475,,,,,,,,
476,Language barrier. Describe case that I try fix.,communication,explain rationale,,1,,,
477,Waiting until the original author(s) get to it and convincing that the change is worth and sufficiently-well written.,responsiveness,explain rationale,,1,,,
478,"to get it finally merged, convince others, everything is okay",responsiveness,explain rationale,,1,,,
479,Slow or no reply,responsiveness,,,1,,,
480,,,,,,,,
481,,,,,,,,
482,none really,,,,,,,
483,"Rebasing old PRs. Tedious task mastering git-rebase, uh.",conflicts,,,,1,,
484,,,,,,,,
485,,,,,,,,
486,"Development environments are hard to setup, sometimes it takes days to have every dependency right",infrastructure setup,,,,,1,
487,Apathy,responsiveness,,,1,,,
488,,,,,,,,
489,"For certain projects, not knowing whether or not the code fits the project well.",project compliance,,,,,1,
490,Getting someone to look at the change (unless it's one of the projects I'm a key contributor in already).,responsiveness,,,1,,,
491,Sometimes it's hard to explain the need for some changes. Some teams will immediately reject them without analyzing them properly.,explain rationale,,,1,,,
492,None,,,,,,,
493,Ensuring that my change does not have unforeseen negative impact on other code.,impact analysis,,,,,1,
494,Contact with others contributors,communication,,,1,,,
495,,,,,,,,
496,Lack of effective communication,communication,,,1,,,
497,"I posted pull request, ( add optional mode ), but this is reject because this request not mutched. and after I create new project.",,,,,,,
498,"Keeping solutions from becoming overly complicated. Understanding the source of bugs. Not internalising feedback (i.e., taking criticism objectively rather than personally).",self contained,,,1,,1,
499,,,,,,,,
500,Determining coding styles and patterns that the project team prefers.,project compliance,,,,,1,
501,,,,,,,,
502,Developer ego.,egotism,,,1,,,
503,,,,,,,,
504,,,,,,,,
505,,,,,,,,
506,Not getting enough feedback,communication,,,1,,,1
507,"Sufficient testing (but it makes sense, anyway)",testing,,,,,1,
508,"In cases of major changes, the comunity doesn't generally respond to forum requests for comment, leaving a bit of uncertainty about overall acceptance of the changes.",predicting acceptance,communication,,1,,,
509,,,,,,,,
510,,,,,,,,
511,That the core developer is busy and won't act on the request simply for lack of time.,responsiveness,,,1,,,
512,Generally my age (13) can be a barrier.,personal skills,,,1,,,
513,,,,,,,,
514,Git being more difficult than coding.,git,,,,1,,
515,Seeing if someone cares anymore.,responsiveness,,,1,,,
516,,,,,,,,
517,,,,,,,,
518,A long response time means that I can't continue working on the issue until it is accepted or rejected.,responsiveness,,,1,,,
519,If there is insufficient test coverage to know if the change will break anything. Having pull requests stay open and ignored for a long time.,testing,impact analysis,,1,,1,
520,,,,,,,,
521,,,,,,,,
522,"Whether the project owner will adopt the code.  Often they either never respond or say ""i am trying to keep the code base lean""",predicting acceptance,responsiveness,,1,,,
523,None,,,,,,,
524,"The speed that the authors take any action on the PR (accept and merge, comment, etc.).",responsiveness,,,1,,,
525,making lots of docs and tests,testing,time,,1,,1,
526,"Politics, or project owners not wanting a fix or change, or not actively maintaining it.",politics,responsiveness,,1,,,
527,Maintainability changes and code cleanup changes are received with mixed acceptance. Some completely hate them and some understand the need.,politics,,,1,,,
528,when I can't use git or at least svn (though that arguably is no pull request then),git,,,,1,,
529,"When I make my codes I realy try think in a real use case for the pull request, if will help another programmers with those codes, and if my codes are really cool.",,,,,,,
530,"For non trivial changes, writing compact, descriptive text for the pull request.",explain rationale,,,1,,,
531,,,,,,,,
532,,,,,,,,
533,,,,,,,,
534,"Probably, comparing files line by line.",,,,,,,
535,,,,,,,,
536,Unconstructive / hostile maintainer attitude,egotism,,,1,,,
537,Updating pull request makes github losing comments when they are attached to commit.,github,,,,1,,1
538,The biggest challenge is having work for a day in some feature and not having any answer when you finally send the pull request.,responsiveness,,,1,,,
539,Lack of feedback for non-merged PRs.,responsiveness,,,1,,,
540,"Don't really, it's the easiest and fastest way I have found",,,,,,,
541,understanding the code of a new project,understanding code base,,,,,1,
542,Agreeing with the author,divergent opinions,,,1,,,
543,communicating with project owners,communication,,,1,,,
544,There are no big challenge because we discuss for difficult problem.,,,,,,,
545,,,,,,,,
546,Writing the code in the first place :),code quality,,,,,1,
547,Getting the project maintainers to respond.,responsiveness,,,1,,,
548,,,,,,,,
549,If someone else tackled the same problem but I just didn't find it.,awareness,,,,1,,
550,,,,,,,,
551,That really depends on the project.,,,,,,,
552,"Dealing with the lack of coding style in the target repo, e.g. having inconsistent style in the original causes conflicts and/or confusion if I decide to enforce formatting etc.",project compliance,,,,,1,
553,Not having correct guidelines,project compliance,,,,,1,
554,"Still to come, I think.",,,,,,,
555,,,,,,,,
556,,,,,,,,
557,,,,,,,,
558,None.,,,,,,,
559,comply project coding style,project compliance,,,,,1,
560,You can see that contribution to jckarter/clay was stopped suddenly because Joe started to work on Apple without any comments and some of my pull requests were ignored. The biggest challenge was to start contribution to other projects,responsiveness,,,1,,,
561,"Missing knowledge about inner workings of a project, leading to extra work (sometimes caused by missing documentation)",understanding code base,,,,,1,
562,"Making revisions after the pull request has been submitted.  If my proposed changes need revision, I only know of two options: a) simply add another commit onto the pull request or b) rewrite the history locally and force push to the pull request.    The problem with option a) is that when you merge to master, you're left with a bunch of small revision commits cluttering up the logs.  Stuff like ""Renaming this function"" or ""Fixing typo.""  The problem with option b) is that it can mess up the comments that are attached to a pull request.    I generally prefer option b) but I understand that some tools like Gerrit use a different system where the change is tracked through a ChangeId in the commit message and you can add to a change without cluttering the history in master.",github,,,,1,,
563,I want to make sure my code is of the quality that hundreds of experiences eyes will appreciate - this often is intimidating.,fear of rejection,,,1,,,
564,"Read others code and get understanding of the project design, do not break current functionality, keep pull request rebased",understanding code base,impact analysis,,,,1,
565,Not being familiar with project history and direction.  Delay in pull request handling.  Conflicting feedback on pull request.,understanding code base,responsiveness,communication,1,,,
566,Lack of feedback from project approvers/maintainers.,responsiveness,,,1,,,
567,Aim to what maintainer needs.,big picture,,,1,,,
568,1) Responsiveness of maintainers.  2) Code quality in the project.,responsiveness,code quality,,1,,1,
569,,,,,,,,
570,,,,,,,,
571,,,,,,,,
572,"There is a little entry barrier for people which didn't do distributed workflows previously, but it is easy to learn.",pull-based model,,,,1,,
573,,,,,,,,
574,Sometimes processing the pull request takes so long you have to rebase them again.,responsiveness,conflicts,,1,,,
575,,,,,,,,
576,"The new feature may not be of interest to most users of the code, even though you think it is. Some platform-specific issues may arrise that you can't test yourself because you don't have access to that platform. Pull requests may go unnoticed and you have to get attention for it.",predicting acceptance,responsiveness,,1,,1,
577,Getting my employer to approve it (may need legal review).,,,,,,,
578,,,,,,,,
579,My change may not have been done the way the project owner wanted.,project compliance,,,1,,,
580,,,,,,,,
581,,,,,,,,
582,,,,,,,,
583,Argument or dissent from the project maintainers.,divergent opinions,,,1,,,
584,Encouraging reviewers to take time to review the change,responsiveness,,,1,,,
585,,,,,,,,
586,Long discussions before merging.,divergent opinions,,,1,,,
587,"Asynchronous collaboration is awesome and having worked that way for multiple years, it's really the best way to develop.",,,,,,,
588,N/a,,,,,,,
589,,,,,,,,
590,Reponse time,responsiveness,,,1,,,
591,response time,responsiveness,,,1,,,
592,,,,,,,,
593,Finding my way around somebody else's source code.,understanding code base,,,,,1,
594,,,,,,,,
595,"figuring out testing expectations, and testing practices of the project. These are often assumed, even if contribution guidelines say ""Should have a test"".",testing,project compliance,,,,1,
596,,,,,,,,
597,,,,,,,,
598,"Adhering to generally accepted guidelines for working in a project (including tests, etc..) — just because I've never really worked in such an environment before, all my contributions so far have been small features added solely because I needed them.",project compliance,,,,,1,
599,,,,,,,,
600,"Sometimes, then I send changes via email, people promisses to do relavant changes, but they don't do so. This demotivates.",politics,,,1,,,
601,Making sure we don't break binary compatibility.,impact analysis,,,,,1,
602,Lack of tests,testing,,,,,1,
603,,,,,,,,
604,"Convincing the repo owner that my use case is valid, and vital.",explain rationale,,,1,,,
605,"Signing up for a mailing list, going through a manually curated submission process for creating accounts, or using a version control host that doesn't expose the code in a well-organized fashion are all negatives.",communication,,,,1,,
606,,,,,,,,
607,,,,,,,,
608,,,,,,,,
609,Not being able to figure how to run (or edit) the test suite (with travis-ci web client project),infrastructure setup,,,,1,,
610,,,,,,,,
611,Start to write code :),code quality,,,,,1,
612,Getting the person to review the change. Most people are lazy.,responsiveness,,,1,,,
613,"Communication with other developers. But since I contribute mostly to non-commercial free software, I can understand time pressure.",communication,,,1,,,
614,,,,,,,,
615,More spam,,,,,,,
616,bikeshedding,divergent opinions,communication,,1,,,
617,,,,,,,,
618,"When my own code depends on a PR, and I don't know if the PR will get accepted that causes uncertanty and stress.",predicting acceptance,,,1,,,
619,"Not necessarily a challenge, but not getting my pull request review within a week or two is really annoying.",responsiveness,,,1,,,
620,lack of context on a project might prevent me from seeing or following the correct solution path,awareness,,,,,1,
621,Not sure if it will be accepted,predicting acceptance,,,1,,,
622,,,,,,,,
623,,,,,,,,
624,Lack of time.,time,,,1,,,
625,Others are too busy to review my code.,responsiveness,,,1,,,
626,None,,,,,,,
627,"Updating pull requests if something went wrong (for example, when included unnecessary commit)",extra work,,,,1,,
628,Proper testing,testing,,,,,1,
629,Lack of action/review of the pull request.,responsiveness,,,1,,,
630,Using git without shooting myself in the foot.,git,,,,1,,
631,I'm don't know,,,,,,,
632,"git. I can work with svn, hg, cvs, rcs, bzr, but not git. I have to look up every command every single time. In fact, it's a reason not to contribute to a project.    The second biggest challenge is the pull request itself. With hg patch queues, I frequently edit the patchfile instead of the source. pull requests are too rigid for that.    rebasing is evil in the sense that you're in a vcs, yet it is extremely simple to loose your history without hope of recovery. Isn't that weird for a vcs? mq is not much better, perhaps evolve of hg is better.  On the other hand, I do prefer mq over rebasing. mq gives much more freedom in working. rebasing means you're changing a commit in the middle of a sequence, and you're immediately stuck with all kinds of merge mess that needs to be completed before you can do the next thing. Often I jump up and down in the mq patch queue all day, below 5-7 patches that have no hope of ever getting merged (they are old versions of the change I am making, a source of previous work to copy/peak from, but not good enough to ever make in the patch that will be submitted).",git,,,,1,,
633,null,,,,,,,
634,Pass the code review.,code review,,,1,,,
635,"Depend on the project.. some projects are not too open for different needs, so sometime you may need to fork and create a new projet to achieve your needs.",egotism,,,1,,,
636,Communicating front and back with contributors.,communication,,,1,,,
637,"I find it difficult to discuss in advance the changes, since the project is extremely pull-request oriented.",communication,pull-based model,,1,1,,
638,Lack of response.  Sometimes conflict of vision or beliefs.,responsiveness,divergent opinions,,1,,,
639,,,,,,,,
640,"Convincing others to check my pull requests before merge.  I may have permission to merge my changes on my own authority, but I don't like to do that because I cannot test my code on a wide variety of platforms.",responsiveness,,,1,,,
641,Git and GitHub learning curve.,git,github,,,1,,
642,"Different test results in different environments, not as familiar with test methodologies so I have a hard time creating appropriate tests.",testing,,,,,1,
643,Ignored by maintainer.,responsiveness,,,1,,,
644,Getting them processed in a timely manner.,responsiveness,,,1,,,
645,good knowledge of git,git,,,,1,,
646,none in particular,,,,,,,
647,"projects that the original maintainer has gone away for more than a few months. At this point, it is hard to know which fork is most current and can take over as being the mainline.",responsiveness,,,1,,,
648,,,,,,,,
649,In some projects style guidelines or testing setups are so idiosyncratic to make setup difficult.,infrastructure setup,project compliance,,,1,,
650,Code format,project compliance,,,,,1,
651,"Not being familiar with the tools involved -- not having used git before and not using it often enough means I find myself looking up commands, etc",git,,,,1,,
652,"Building upon the changes brought by the pull request, as I am not site the pull request will be merged.",,,,,,,
653,Support from the maintainer. Documentation isn't valued.,communication,,,1,,,
654,,,,,,,,
655,"espressomd/espresso is software that runs on single cores, GPUs and distributed memory architectures (supercomputers). It is nearly impossible to test every possible configuration and mistakes that only affect specific combinations of architecture, operating system, build system, compilers and libraries are easily overlooked.",infrastructure setup,testing,,,,1,
656,"If there isn't a good testing infrastructure in place, then I'm not sure how to contribute tests related to a pull requests.",testing,,,,,1,
657,,,,,,,,
658,"Attempting to maintain the project's code style and structure, if it differs from my personal preferences.",project compliance,,,,,1,
659,"Not being sure about certain small things in the code that I want to submit. Example: how the project owner want things to be named, if he/she's okay with using this method for solving the problem, etc.",project compliance,predicting acceptance,,1,,1,
660,,,,,,,,
661,,,,,,,,
662,"Github is not actively developing the feature set that contributors need, but is focusing on other areas instead. Example given: Currently there is no way to differentiate between pull requests which were closed but are not merged, and those which were merged. It makes it impossible to track your own progress if you have many pull requests which are closed and need additional work, but you're not manually keeping track of them. They bitrot and are not easily found through Github.",github,,,,1,,1
663,"Understanding the code base (e.g., how to run tests).",understanding code base,,,,,1,
664,Missing feedback,responsiveness,,,1,,,
665,"The feature I'm suggesting might not be wanted / the problem I tried to fix might not be a bug. That's why I discuss at least on IRC before starting to work on anything. If I can be 100% certain that my contribution is wanted (that's true for ElbertF/Wappalyzer), I skip that step and do not face challenges.",predicting acceptance,communication,,1,,,1
666,"When contributing to less active projects, it can be really frustrating to have a PR sit untouched for months, since by the time the author gets back to it, I may have given up on it and no longer care.  Another problem I've experienced in other projects is animosity.  Some authors are very aggressive, especially when they're told there's some perceived issue with their code.",responsiveness,egotism,,1,,,
667,,,,,,,,
668,the async communication can take a long time,responsiveness,,,1,,,
669,Availability of reviewers,responsiveness,,,1,,,
670,Getting the project to find the time to merge it.,responsiveness,,,1,,,
671,the timeliness of review by others.,responsiveness,,,1,,,
672,Code review + fixes time,code review,,,1,,,
673,No response/hostile project lead,egotism,responsiveness,,1,,,
674,time to respond.  Some projects aren't very active,responsiveness,,,1,,,
675,None,,,,,,,
676,,,,,,,,
677,Finding other people to review in a timely fashion.,responsiveness,,,1,,,
678,,,,,,,,
679,,,,,,,,
680,,,,,,,,
681,"Getting lost in a long list of pull requests, especially low quality ones",,,,,,,
682,,,,,,,,
683,,,,,,,,
684,PRs is not responded to,responsiveness,,,1,,,
685,,,,,,,,
686,,,,,,,,
687,n/a,,,,,,,
688,,,,,,,,
689,,,,,,,,
690,Delays in addressing  a PR means repeated rebasing/retesting.  Not all projects have travis setup on them.,responsiveness,,,1,,,
691,Understanding the entire codebase / testing if I'm working on a small piece.,understanding code base,,,,,1,
692,,,,,,,,
693,"Initially, the biggest challenge is to become familiar enough with the project architecture and roadmap to be able to contribute meaningful improvements",understanding code base,big picture,,,,1,
694,Programming...,code quality,,,,,1,
695,Lack of project owner's response.,responsiveness,,,1,,,
696,,,,,,,,
697,Merge conflicts when several people send large contributions for the same piece of code in a short period of time.,conflicts,,,1,,,
698,"Malaise and abandonment. Few things are more frustrating than opening a pull request and having it go nowhere. This is especially true when there's community support for the change, but the core team isn't active. I've even done some pull requests where the core team has reviewed the changes, but then just never gets around to merging.",responsiveness,,,1,,,1
699,No clear guidelines as to which branch to send the pull request to.,project compliance,,,1,,,
700,,,,,,,,
701,N/A,,,,,,,
702,,,,,,,,
703,,,,,,,,
704,Delays to review/merge forces me to maintain and rebase separate branches.,responsiveness,,,1,,,
705,,,,,,,,
706,,,,,,,,
707,,,,,,,,
708,Lack of clarity on how to test ones PR before submission.,testing,project compliance,,1,,,
709,,,,,,,,
710,"The biggest challenge is establishing a culture of using pull requests for code review or code signoff. Until that has been established, the pull requests are treated as inevitable rather than the proposals they are.",code review,,,1,,,
711,Understanding the code base and how a particular maintainer expects core code to function. Sometimes it's just understanding the purpose the maintainer has for the code.,understanding code base,,,,,1,1
712,Not knowing if the maintainer will eve see my PR.,responsiveness,,,1,,,
713,,,,,,,,
714,,,,,,,,
715,The supercommitter issue. The code you are modifying was probably written by the gatekeeper for the pull requests. They can be quite defensive about new people wanting to change their code.,egotism,,,1,,,1
716,None,,,,,,,
717,,,,,,,,
718,Find out if my contribution is relevant,big picture,,,1,,,
719,my programming skill,personal skills,,,,,1,
720,,,,,,,,
721,,,,,,,,
722,to have enough skills to contribute,personal skills,,,,,1,
723,,,,,,,,
724,,,,,,,,
725,No challenge,,,,,,,
726,,,,,,,,
727,to summarize the intent of the changes,explain rationale,,,1,,,
728,"I'd say the prior communication aspect would probably have to be the big one. Ensuring the person in charge of the project is on the same page with what's going to get done, that they're OK with the way I plan to do it etc.",communication,,,1,,,
729,,,,,,,,
730,,,,,,,,
731,To send code with high quality that exceed expectations,code quality,,,,,1,
732,,,,,,,,
733,Idiots and people with big egos,egotism,,,1,,,
734,,,,,,,,
735,Convincing the project owners that the pull request is useful,explain rationale,,,1,,,
736,"old comments tend to vanish after the branch is 'push --force', and there is no easy way to grab a branch's/pull request's comment history, which would be good to have for long-lived branches",git,,,,1,,
737,"This question is very general.  Difficult to answer in a general scope.    Technically, GH could improve the process of  creating PRs in some specific ways (e.g. branches) a little bit.    Code-wise? To contribute code that is too narrow in its use case (especially when contributing to a general purpose framework).",github,,,,1,,
738,some period of time when you don't know whenever 'core-team' has seen your PR,responsiveness,,,1,,,
739,Code has to be sparkling clean.,code quality,,,,,1,
740,Patch accepted :),,,,,,,
741,first pull request,,,,,,,
742,,,,,,,,
743,the language,,,,,,,
744,,,,,,,,
745,No known.,,,,,,,
746,,,,,,,,
747,"Inactive or uninterested maintainer. Often there is a single maintainer and (s)he away for a while or not interested in maintaining the project anymore. Sometimes a maintainer is uninterested (or even conflicted) about a certain pull request, presumely because the patch forces *them* to maintain the code afterwards.",responsiveness,,,1,,,
748,writing proper tests and my pull request being ignored,responsiveness,,,1,,,
749,Making sure you don't break anything,impact analysis,,,,,1,
750,Waiting for review,responsiveness,,,1,,,
751,git is somethimes not obvious especially in case of merge conflicts,git,,,,1,,
752,,,,,,,,
753,,,,,,,,
754,"having no answer, and not wanting to distrub coders too much",responsiveness,,,1,,,
755,On OSS I'm never that sure if a project team will actually look at or respond to my pull-request at all.,responsiveness,,,1,,,
756,comments are lost after rebase,github,,,,1,,
757,Lack of feedback: pull request is staying open without any reaction.,responsiveness,,,1,,,
758,,,,,,,,
759,Work like i'm want and have need features.,,,,,,,
760,"having it merged, if it includes deisgn changes",,,,,,,
