,x,tag1,tag2,tag3
1,Better guidelines,guidelines,,
2,I didnt find any barrier on cpputest.,,,
3,Have a github style pull request system backed up with online project contribution guidelines and expectations.,guidelines,,
4,,,,
5,,,,
6,Appreciate all contributions. There are numerous projects on Github where contributions aren't reviewed at all.,compassionate,review process,
7,"The biggest barrier is understanding the code you're contributing to. If anything, enforcing readability and modularity standards in the code itself.",code quality,,
8,Guideline how/where to write unit cases.,guidelines,,
9,,,,
10,Reply to pull requests in a timely fashion.,responsiveness,,
11,,,,
12,To many non reviewed or refused PullRequests,availability,review process,minimize queue
13,,,,
14,none,,,
15,Include good guidelines on how to get started and how to get feedback on changes.,guidelines,,
16,,,,
17,,,,
18,,,,
19,,,,
20,,,,
21,,,,
22,,,,
23,Welcoming atmosphere. Contribution guidelines. Replying to pull requests promptly.,compassionate,guidelines,responsiveness
24,,,,
25,Be nice to people,compassionate,,
26,Activelly process pull request and deal with issues in the issue tracker,responsiveness,,
27,"They should mark the open issues with the level of difficulty, like these issues are easy and beginners can resolve them, these have intermediate level of difficulty.    Repo owner should be available on various channels to discuss and communicate.    Code should be well documented.",task list,availability,code quality
28,,,,
29,clear guidelines + tests + travis,guidelines,continuous integration,
30,,,,
31,Encourage them to contribute by accepting/reviewing pull requests,compassionate,,
32,Good documentation.  Responsive feedback from committers.,documentation,responsiveness,
33,"Provide clear guidelines on coding style, best way to contribute and best way to contact existing contributors. Preferably run tests (including coding style ones) automatically when a pull request is sent to save everyone's time.",guidelines,continuous integration,communication channels
34,More docs on contribution process,guidelines,,
35,,,,
36,"* clearly outline their submission process  * indicate good areas for new contributors to work on (this is very hard to keep up-to-date as it depends on what other members are currently working on, as well as which tasks have low entry requirements. i've never seen anyone do this well)  * provide a clear system for submission review and feedback  * respond to new contributions as quickly as possible.",guidelines,task list,responsiveness
37,Having good contribution guidelines and present project owners / maintainers ...,guidelines,,
38,Give detailed responses to PRs as to why it might not be accepted.,,,
39,,,,
40,"Simple, clear pages on their web site explaining what they want, their guidelines, and how to use GitHub/PR.",guidelines,,
41,,,,
42,help with writing tests and code formatting,compassionate,,
43,"Clear contribution guidelines, specifically relating to clear license language (and selecting an effective license); Review pull requests in a timely manner",guidelines,responsiveness,licensing
44,,,,
45,Document both the public API and the code itself  thoroughly.,documentation,,
46,,,,
47,,,,
48,Documentation,documentation,,
49,be active and keen,availability,compassionate,
50,Be friendly when receiving badly formatted Pull Requests.,compassionate,,
51,Have the different communication channels clearly described in the README.md file.,guidelines,,
52,"Create a short guide how to contribute, including small open tasks (LHF - low hanging fruits).",guidelines,task list,
53,,,,
54,"Contributor Guidelines, Readme how to setup for development",guidelines,,
55,Documentation can just about always be improved- it can be a bit intimidating to contribute to a project without confidence that you know exactly what is going on from the docs.,documentation,,
56,,,,
57,"Personally: get feedback on pull requests promptly,  or get feedback on pull requests at all   without requiring face-to-face meeting    In general:  Provide a wiki page, how to build the project and contribute guidelines (this is done by the Singular project)  -Organize workshops or tutorials for new contriburors.",responsiveness,guidelines,compassionate
58,"Provide helpful readmes, newbie-friendly contributor guidelines, thorough documentation, and possibly even tailor the project itself to new contributors (e.g. by basing it on very simple-to-learn languages).",documentation,guidelines,
59,"Easy navigation to ""how to get started,"" PR formatting/ style guides.",guidelines,,
60,more/better documentation,documentation,,
61,"Have clear project documentation, goals and guidelines.",documentation,roadmap,guidelines
62,"Good guidelines, step by step instructions for project and test set up.",guidelines,,
63,,,,
64,They could make clear and concise contribution guidelines and build processes.,guidelines,,
65,,,,
66,More advertisment about what is needed. More documentation,task list,documentation,
67,Welcome them better,compassionate,,
68,,,,
69,Clear Contribution Guidelines. Issue Tracking System,guidelines,,
70,"speed up releasing new version of project. Project is split into ""core"" and ""plugins"" and current ""stable"" core branch is more than 2 years old and it is frozen to features as well as to bug fixes.",architecture to fit contributions,,
71,,,,
72,Respond quickly to pull requests,responsiveness,,
73,"Maintain a ""positive"" culture; be friendly, polite etc",compassionate,,
74,Contributing guidelines. Clarity on setting up dev environment and running tests.,guidelines,development environment,
75,"I think the most important thing projects could do to reduce barriers for new contributors are    a) real-time feedback over IRC or some such channel.     b) Minutely detailed instructions about setup of a development environment    There is always an ""activation energy"" involved in starting any new project, and most open source project have this energy barrier set too high.",communication channels,development environment,
76,"Mark Issues  for easy access, have a list of features that are needed but none of the current developers has the means to address them",task list,,
77,"Give helpful advice on PRs, involve new contributors in code review and merging as early as possible.",compassionate,responsiveness,
78,,,,
79,,,,
80,"Maintain clean and up-to-date documentation regarding architecture, planned changes or direction of the development. Describe common working environment setup (e.g. for testing). Have a large-enough reviewers base to handle pulls shortly after they are submitted (days rather then months).",documentation,,responsiveness
81,"- Introduce a ""newbie"" category in their issue tracker. This tag marks small changes that can be used to get to know the project.    - Good documentation",task list,documentation,
82,They should not reduce barriers for new contributors. A project should not encourage new contributors just for the sake of it.,nothing,,
83,Maybe a guideline improvement directly on the repository to help new contributors during first pull requests.,guidelines,,
84,"Good docs and guidelines, quick PR processing.",documentation,guidelines,responsiveness
85,Lack of response to issues and/or pull requests.,responsiveness,,
86,,,,
87,"Document a handful of ""success stories"" among PRs, which newcomers should use as reference.",examples,,
88,,,,
89,,,,
90,"Nothing - if people are to scared to face ridicule or scorn for a possible crappy contribution, they should find another line of work. This is Open Source - the whole world is listening!  The ridicule/scorn isn't personal - who (should) care what some random dickhead in a far off place thinks of you!?",nothing,,
91,"Do better sourcecode documentation and structure. Most of the time I decided not to contribute to a project was the barrier I couldn't understand the code and/or its structure.   It never happened to me to make changes, which got declined because of project managment bureaucracy.",code readability,documentation,
92,Provide documentation in the source code and comments or easily readable code.,documentation,code readability,
93,Dont know,,,
94,,,,
95,,,,
96,,,,
97,"Use commons or interesting tools (programming languages, issue trackers, revisions control systems, etc). Have clean code. Had good docs. Have automated tests and clear instructions on how to use them (preferably in the readme).",code quality,documentation,testing
98,haven't run into any yet in my experience.,nothing,,
99,Respond faster to issues and pull requests. Provide guidance on how to contribute. Be more lenient on accepting pull requests.,responsiveness,compassionate,
100,Label tasks that are appropriate for new contributors.,task list,,
101,,,,
102,Clearly document contribution guidelines.,guidelines,,
103,,,,
104,The code review process could be better - easier to get someone to review on a timely fashion.,responsiveness,,
105,Categorize their issues by component and difficulty with some hints about what might make a good PR.,task list,guidelines,
106,"Helpful, experience PR reviewers. Good roadmaps and easy to run tests.",review process,roadmap,testing
107,,,,
108,keep contributor guidelines updated with latests changes in tools/library used to develop the app.,guidelines,,
109,"Have clear objectives, contribution guidelines and be friendly",roadmap,guidelines,compassionate
110,"They should have clear contributing guidelines, it's very frustrating when during you firsts PRs the reviewer starts asking for things that could/should be left clear in the guidelines (coding style, minimum percentage coverage for new features, etc.)",guidelines,,
111,,,,
112,Ensure that patch submission process isn't overly complex for people making simple/one-off changes,review process,,
113,Better documentation,documentation,,
114,,,,
115,- Help with positive feedback to get the required quality.   - Automated builds to run the tests.,compassionate,automate builds,
116,,,,
117,"Maintaining an issues list with low-hanging fruit (like documentation, small bugs, etc) encourages folks who might otherwise be intimidated to contribute.",task list,,
118,,,,
119,I'm not really sure what barriers there are?  I guess you just find a project that speaks to you.,nothing,,
120,"1. accept pull requests to the default branch.  2. better testing infrastructure, e.g.: the proper travisci setup.  3. follow some code standards.",review process,continuous integration,code quality
121,"Short and precise text on guidelines.  Have IRC for easy availability and discussions, preferably hooked up to Travis",guidelines,communication channels,
122,Contributor guidelines and tools to check that contributions match said guidelines,guidelines,continuous integration,
123,"Public project roadmaps would be helpful, contribution guidelines are always welcome but not really necessary.",roadmap,,
124,Have more people reviewing and merging pull request. I think that helps new contributors by showing that anyone is free to do it.,review process,,
125,"increase communication, add ""achievement system""",communication channels,,
126,,,,
127,Host their code on github and allow pull requests,,,
128,Maintain a list of low hanging fruits.,task list,,
129,,,,
130,Choose a Codesite which allows different DVCS to be used. Clear description on main/maintainance branches,,,
131,"Give ""easy picks"" issues to contributors to help them entering in the code and contributing",task list,,
132,,,,
133,They should welcome to any developer regardless of their background or level of experience.,compassionate,,
134,,,,
135,,,,
136,,,,
137,"Clear guidelines, (any) fast response.",guidelines,responsiveness,
138,,,,
139,,,,
140,,,,
141,easy IDE setup procedure,development environment,,
142,"Many Unit Tests, Guidelines for contribution",testing,guidelines,
143,,,,
144,,,,
145,"Be more accepting towards pull-requests that don't conform to the guidelines. I created PR for issues that are blocking me. Not following the guidelines might make it unsuitable for the main project, but that shouldn't mean that the burden of conformance is on me. Anyone could base a new PR off of mine.",,,
146,"* Easy set-up instructions to get local dev environments set up.  * Clear project guidelines and coding conventions.  * Clear communcation channels (IRC, mailers) set up for support if needed",development environment,guidelines,communication channels
147,"Make code as modular as possible, set up integrated builds, actively comment on and integrate pull requests.",architecture to fit contributions,automate builds,responsiveness
148,"clear guidelines for contributing, clear roadmap",guidelines,roadmap,
149,,,,
150,Accept patches over email :),,,
151,Better documentation and start-up procedures.,documentation,development environment,
152,,,,
153,mentoring,compassionate,,
154,"I find Good communication is a key factor. Even just acknowledging a PR is good. PR comments / feedback help a lot. If something is low priority just say so, don't just ignore it.",communication channels,compassionate,
155,,,,
156,"Using code standards, being willing to merge pull requests",code quality,compassionate,
157,"Better responses on pull request (write critics if my contribution is bad and why and what to do next time), and have all instructions and rules (and links with instructions and rules) in one place (for example readme.txt)",review process,guidelines,
158,Make sure PR are reviewed quickly. Best often accept. If not explain why rejected.,responsiveness,review process,
159,,,,
160,,,,
161,1) code convention guide lines and contribution guide lines should be clear.  2) give some guide lines for understnad the project if it is a big project.  3) Able to communicate with main developers before starting to any new issue.,guidelines,documentation,communication channels
162,have an easy-pick label,task list,,
163,Create a list with todo issues (maybe by tracking them in an issue tracking system) and labeling them with a difficulty and priority level,task list,,
164,,,,
165,,,,
166,,,,
167,communicate in a wellcoming manner,compassionate,,
168,,,,
169,"Make it clear what kind of contributions would be desired from contributors. Bugs to fix, ideas for new features planned or documentation needed for existing ones.",guidelines,,
170,Provide clear guidelines on how to contribute. Zeromq is a good example.,guidelines,,
171,create documentation as clear as possible to support new contributors,documentation,,
172,,,,
173,Prioritise responding to Pull Requests (not allow them to get stale),responsiveness,,
174,Clean Code and Documentation.,code quality,documentation,
175,good documentation,documentation,,
176,,,,
177,,,,
178,"Good documentation, and code more API friendly",documentation,architecture to fit contributions,
179,Guidelines,guidelines,,
180,No idea.,,,
181,,,,
182,,,,
183,,,,
184,"Dedicate more time to documentation and ""quick start guides"" (i.e. if the project is hard to build and run, then I'll move on).  Though having more contributors is not necessarily a good thing.",documentation,,
185,"issues under ""newbie"" tag",task list,,
186,Project Aims in Readme and Contributor guidelines are very useful.,roadmap,guidelines,
187,Describe how to build a test environment. It's often hard to run the tests for example.,development environment,,
188,,,,
189,Make it very clear where help is needed,task list,,
190,Patient mentoring. (Requires nurturing developer community.),compassionate,,
191,,,,
192,,,,
193,"Comprehensive test suite, e.g. Travis CI.  Fast response from project owner",continuous integration,responsiveness,
194,Highlight (and simplify if possible) the steps required to get the project up and running locally,development environment,,
195,,,,
196,,,,
197,Document their preferred procedure,guidelines,,
198,existence of project roadmap and contributor guidelines,roadmap,guidelines,
199,"Use community-established infrastructure, like github and its pull requests, submitting patches via email is so last-century!",,,
200,"Offer introductions to systems like GitHub, there are often people willing to take part in a project when it comes to translations of apps (I can only speak for this field, as I'm only contributing translations), but many don't understand the complexity of GitHub.",compassionate,,
201,"Automate fully the build process, following common source/code structure/layouts, stable test suites.",continuous integration,code quality,testing
202,"Engage in positive, responsive discussion in issue queues as often people asking questions may take a stab at contributing to fix their own issue. Giving them a positive first experience goes a long way.",responsiveness,compassionate,
203,"- Use irc channel and have some member of the core team there to give guidelines to new programmers wanting to contribute.    - Have the architecture of the project adequately documented.    - Have an intuitive issue tracking process. For example, not to assign all issues to the project lead, but rather leave them unassigned so others can have a pick from that list.",communication channels,architecture to fit contributions,review process
204,- document and organize the code  - maintain a TODO list,documentation,task list,
205,,,,
206,,,,
207,,,,
208,,,,
209,"Mostly: a robust and easy-to-setup build. Also: fast feedback, stable tests",development environment,responsiveness,testing
210,,,,
211,1.Proper Documentation  2.Active IRC and mailing lists.,documentation,communication channels,
212,,,,
213,Make sure contribution process and guidelines are in a prominent place.  Give quick feedback on new contributions.,guidelines,responsiveness,
214,"provide list of features to develop with acceptance criteria, provide clear guidelines",task list,guidelines,
215,Provide their own guidelines for contributors.,guidelines,,
216,Spend all their time cleaning up bad contributions. (The current barriers for new contributors are appropriate.),,,
217,,,,
218,"Positive feedback, quick feedback",compassionate,responsiveness,
219,"Clear roadmap, contribution guidelines and list of things needs contribution",roadmap,guidelines,task list
220,more simple process,review process,,
221,"Really, I don't see any barrier :)",nothing,,
222,,,,
223,"Keep the list of issues clean, answer swiftly to every pull request, categorize them, and always explain the reasons for not merging a pull request.",responsiveness,,
224,"Have the contributor guidelines, explain the source code so people feel accepted and are able to understand it fast.",guidelines,compassionate,
225,,,,
226,"guidelines, tutorials, good test coverage",guidelines,examples,testing
227,,,,
228,,,,
229,,,,
230,,,,
231,"Lower the barrier for 'new comers', providing a set of easy bugs to start working on. Provide a positive environment, for example provide a good code review on a PR where the quality is below par.",task list,compassionate,
232,Existence of contributor guidelines,guidelines,,
233,,,,
234,Detailed roadmaps,roadmap,,
235,Respond to pull requests in a timely manner,responsiveness,,
236,"Documentation on contributing, installing, roadmap, explaining how to communicate/propose ideas.  Automate builds both for dev machines and hooks for PRs.  Provide feedback on issues/PRs ASAP to contributors.",guidelines,automate builds,
237,,,,
238,"Barriers:    Lack of information, expecting adherence to stringent standards from programmers at random levels of experience / patience and, difficulty in testing or submitting code for review.    Solutions:    Use Github to accept pull requests and track issues. They have the absolute best integration of internet ""social coding"" tools and GUI driven desktop applications. If git is not used within the organization then keep the code hosted on Github in sync with whatever is being used internally.    Acknowledge new pull requests and give an estimated time when it will be reviewed. When I see that project maintainers haven't responded to multiple issues and pull requests I assume the project is dead or that my work will be for nothing.    If there are code formatting guidelines, make sure the project maintainers have access to code formatters that can automatically reformat code submitted. Not every editor will support writing code in the exact format requested but many of them can create legible code. Most languages have tools that will reformat code to specifications so, things like ""tabs vs. spaces"" and ""end of line character(s)"" shouldn't even be an issue.    If documentation is required, require it in code comments or plain text files and generate documentation in other formats from that. I've never looked at code and wished it wasn't documented so much. I've never been upset that documentation was generated from the contents of code comments. I have been put off by projects demanding documentation in anything other than plain text or HTML. I mean, what does learning XUL, markdown, jade, less, sass, mustache, etc. have to do with anything? Now, if there's a template for docs and it's loaded into an online editor like CKEditor or a web form, that's awesome too.    Document the internal workings and intentions of the code in the project. The larger the project, the more this is needed. Nobody is going to even attempt to work on a bug if they have to parse 10,000 lines of code mentally, before being able to discover where to begin. Use a table of contents, chapters, sections, etc. and subheadings to break the doc down into logical chunks of information. A poorly formatted 10,000 line document is just as bad as undocumented code.    If the project uses a build system, do everything possible to package up all the dependencies and create a virtual machine or an installer. Barring that, write clear instructions on setting everything up and make it simple to follow. Nobody in their right mind wants to become an expert in some ancient code versioning system, custom compiler, dodgy config files, and language hacks, just to be able to build a project.    Give developers time to answer questions about the code. If a company is embracing open source and accepting contributions from strangers, it will only help them to provide support to the community which is providing free labor. I see it happen all the time: someone reports a bug and asks a few questions about the internal workings of a project, doesn't get an answer, and finds some other means of solving their own problem. Usually they solve their own problem by using a different library, project, program, etc. If there were someone answering questions in a timely fashion then perhaps the person asking would see the solution as an intellectual challenge or something simple to implement.",,,
239,Simple and clear instructions about the process.,guidelines,,
240,"1. have a strong goal  2. Descriptive inline comments  3. active  4. polite, but through code-review",roadmap,documentation,responsiveness
241,"Probably take a friendly tone and offer to walk new contributors through the process. Once familiar the Pull Request system becomes almost second nature, but it can be a large barrier for potential contributors. Helping break that down has brought some (turned out to be quite skilled) contributors to our project who otherwise might have been put off by the process, or",compassionate,compassionate,
242,,,,
243,Encourage documentation-only PRs by acting on the quickly and encouraging the author (even if the PR needs further work).,compassionate,,
244,,,,
245,Improve the contributors guideline,guidelines,,
246,,,,
247,1. Classify outstanding issues according to expected breadth of code-base knowledge to fix.  2. Veteran contributors personally offer code reviews to beginning contributors.,task list,compassionate,
248,"Not sure.  Most of the projects I've worked on used Github as an online interface, but most of the discussion and planning was carried out face-to-face.",nothing,,
249,,,,
250,,,,
251,"Create/publish contribution guidelines. Besides that, projects with a good test coverage are easily to learn when you are starting to contribute.",guidelines,testing,
252,,,,
253,"Clear guidelines for pull requests, being up front with what pull requests will be accepted/considered/rejected",guidelines,compassionate,
254,"Have clear guidelines for contributing, and a good list of what issues need to be picked up/priority board.",guidelines,task list,
255,Refer to an easy and quick to grasp documentation. Point to important tools to work with and organize code. Assign easy tasks of limited scope to new contributors to allow them to familiarize themselves with the basic concepts.,task list,responsiveness,
256,"Provide small tasks to get started, never discourage in any way",,,
257,,,,
258,Tests and issue tracking,testing,,
259,,,,
260,,,,
261,Full CI system. Better contribution guideline. More timely merges.,continuous integration,guidelines,
262,,,,
263,"active maintainership, clear communication, set aside ego.",availability,compassionate,
264,,,,
265,Realy comment on pull requests and not let them stay open forever,responsiveness,minimize queue,
266,,,,
267,"Write good documentation, especially around PRs!",documentation,,
268,"Much more user-friendly tutorials; for example, the gerrit system at Wikipedia tech labs has AWFUL user-friendliness.",examples,,
269,Have contributors be available in person at meet ups. Sometimes people just need a friendly face.,compassionate,,
270,Appoint an experienced and friendly code reviewer or mentor for new coder/contributors.,compassionate,,
271,Quick and systematic reviewing process.,review process,,
272,"Provide comprehensive documentation, while simultaneously reassuring users to ""go for it"" if they want to contribute, as opposed to the ""RTFM"" attitude that some projects express through their guidelines/documentation.",documentation,compassionate,
273,,,,
274,"make contributing and reviewing as easy as possible, e.g. automatic testing",testing,,
275,,,,
276,Keep pull requests pending minimal.,minimize queue,,
277,"Clear documentation for contributors, fast response to questions and pull requests.",guidelines,responsiveness,
278,"As long as they follow most guidelines that are here listed, that should be sufficient.    This article presents some important information about this:  http://arxiv.org/abs/1301.7064",guidelines,,
279,,,,
280,Be more receptive.,compassionate,,
281,Be more proactive in responding to pull requests and issues.  No response at all is the most demoralizing thing.,responsiveness,,
282,"1) have a solid test suite that's easy to run.  2) In the Readme, include clear instructions for setting up a local dev copy of the code & running the tests. Keep those instructions up to date.",testing,development environment,
283,be more responsive.,responsiveness,,
284,"Be clear about their activity and interest in the project.  Maintainers are the gate keepers for pull requests, and communication with contributors is essential",roadmap,,
285,Be more open to contributions from members of the community.,compassionate,,
286,"An example pull request in compliance with guidelines will help a lot for new contributors to get a hang of the corrrect way of proposing changes. Also, unifying the discussion channels will reduce duplicate efforts. Sometimes its hard to keep up with mailing list, issue tracker and IRC discussions.",examples,communication channels,
287,Make it easier people to contribute by step by step doc,guidelines,,
288,,,,
289,Proactively communicate and encourage anyone who does send a pull request.,compassionate,,
290,"Can't think of anything, it's as streamlined as possible (for new developers... I personally would enjoy having commit rights)",nothing,,
291,Give clearer instructions for development environment setup and other contributor guidelines.,development environment,guidelines,
292,,,,
293,Clear contributor guidelines.,guidelines,,
294,Write good codestyles,documentation,,
295,,,,
296,Accept pull requests fast.,responsiveness,,
297,Helpful documentation to get started with hacking on the project,development environment,,
298,Communicate claerlly how to contribute and give feedback to contributors,guidelines,review process,
299,explain how to setup the project,development environment,,
300,Clearly communicate project shot term & long term goals.,roadmap,,
301,,,,
302,Write contribution (pull request) guidelines.,guidelines,,
303,,,,
304,it's all about communication; if my contributions are not valued I don't come back.,compassionate,,
305,Having clear expectations about code reviewing (what do the repo admins expect) and a fast processing of pull requests.,compassionate,responsiveness,
306,,,,
307,Less talk - more work.,,,
308,Provide contributing guidelines,guidelines,,
309,,,,
310,Give feedback to each new pull request/issue so people feel involved. If I see there are comments for each pr I am much more motivated because my work will matter in a way.,review process,compassionate,
311,,,,
312,"good documents, and active communicate.",documentation,communication channels,
313,"Not create ""favorites"" for contributers and have a clear goal/road map.",roadmap,,
314,Pull Requests languish in the inbox. There is no incentive for project core developers to review it. I would be happy to pay money or bitcoins to incentivise review & constructive feedback towards getting my pull requests accepted.,minimize queue,,
315,,,,
316,Dunno,,,
317,easy setup and tests,development environment,testing,
318,Not sure lowering barriers is a good thing. If people are good at programming they will submit pull requests no matter what.,,,
319,"1) Step by step guidelines for new contributors.  2) Frequent code reviews. New contributors get discouraged when they don't hear anything regarding their contribution for long time. Waiting for 2 weeks is normal, but I've experience with teams who reviewed my contribution after 1.5 months of its submission. I lost interest in that project due to their slow code reviews.   3) Clear information about the pre-requisites for contributing to the projects, like languages, libraries you need to know for contributing.  4) Tagging of issues on the basis of their difficulty level. This'll certainly help newbies.",guidelines,responsiveness,development environment
320,"Document how to do common Git tasks - rebase, cherry pick. Demo how to include PHPtest",documentation,,
321,,,,
322,"I believe that for simple patches is to split the code in small components, so a person even if it doesn't understand fully the whole flow, it can either change a small piece, or copy/paste another clasa and add a similar class",,,
323,"CONTRIBUTING.md, picklists (low-hanging fruit, etc).",guidelines,,
324,,,,
325,"Use GitHub, have a clear roadmap.",roadmap,,
326,,,,
327,"I'm generally not negatively impacted by something related to a project to have me avoid contributing to it: a poorly maintained project may just needs help, so i'm at least going to approach this problem first.  Project maintainers have to be open-minded while keeping their vision, missing this would mean to miss new exciting and interesting possibilities.",nothing,,
328,,,,
329,It is very frustrating to work on code and never have it merged in so I think the most important thing is for potential contributes to indicate that theyd be willing to submit a PR for an issue they create and for project owners to engage in a discussion on the issue and indicate whether they would be likely to accept such a PR. Other than that I think contribution guidelines are important especially because there are a lot of great programmers out there who perhaps just arent that experienced with github pull requests or automated testings or the documentation process (for example the sphinx python doc builder library and rst format that cmf uses) and you want to reduce those barriers.,compassionate,guidelines,
330,"Point people at an example ""good"" pull request.  Maybe add testing guidelines and make the committing guidelines more clear.  I often find these are difficult to find.",examples,guidelines,
331,,,,
332,"Be more positive towards first-time contributors, though not if that compromises contribution guidelines (since these are key to maintaining the right community atmosphere).",compassionate,,
333,Proper documentation.,documentation,,
334,Tests and docs,testing,documentation,
335,"better categorize issues as wanted/not wanted, easy/hard, etc.",task list,,
336,Have any sort of point of contact.,communication channels,,
337,Good Documents and Perfect test case,documentation,testing,
338,"They should have a friendly discussion group. If the group ""tone"" is not friendly I don't contribute.",compassionate,,
339,"Projects must provide a good infrastructure for collaborative work (DVCS, issue tracker, CI, mail list, forum, wiki) and good documentation (user documentation, development documentation, codestyles, contributor guidelines).",development environment,documentation,guidelines
340,Just be clear in guidelines and welcome any contribution (that's the ice of OSS and most projects already to this),guidelines,compassionate,
341,"Active maintainers, merge pull-requests frequently, communicate priorities and roadmap",responsiveness,minimize queue,roadmap
342,Do not let patches go stale,minimize queue,,
343,continuos integration  active irc community  no open-core or company policying,continuous integration,communication channels,
344,- Write clear guidelines how to contribute  - Documentation how to set up a dev environment  - Good documentation of API  - Fast repsonse / feedback to pull requests,guidelines,development environment,documentation
345,Reducing the amount of different tools you have to use.,development environment,,
346,,,,
347,Suggestions of features that would be suitable for new contributors. Ability to pair program with a person who has been working on the project.,task list,compassionate,
348,"Good documentation (especially on the code structure, meta overview of the program), allow to easily ask (potentially stupid) questions.",documentation,task list,
349,ensure pull requests are processed in a timely manner,responsiveness,,
350,Have a clean contribution process and always keep an up-to-date list with TODOs.,,,
351,,,,
352,Provide good documentation on the intent and usage of the project and where it is headed.,roadmap,,
353,Fast response,responsiveness,,
354,Have someone assigned to mentor new contributors not familiar with the version control system and bug track system used by the project.,compassionate,,
355,,,,
356,Better documentation,documentation,,
357,,,,
358,Make some kind of a ToDo list for new developers to work on,task list,,
359,"Have a stated policy or promised protocol for dealing with PR's in a timely fashion. I.e., structured guidelines.",guidelines,,
360,"Reduce feedback delay for pull requests, accept anything that solves any bug.",responsiveness,,
361,Too strict patch submitting policies can be scaring,compassionate,,
362,Sort opened issues by difficulty level. Clearly specify low hanging fruit..,task list,,
363,Easy setup of dev env and good tests that are easy to run.,development environment,,
364,Maybe better documents / presentations on how Git and GitHub works.,compassionate,,
365,"Only rough and easily accessible guidelines (preferably in the README)  Have guidelines to keep the code clean and in a single, easy to learn style.",guidelines,,
366,,,,
367,,,,
368,,,,
369,,,,
370,,,,
371,,,,
372,,,,
373,Be more open-minded about new users and their ideas,compassionate,,
374,,,,
375,,,,
376,Understand how to think authors of project to do no harm.,,,
377,Contribution guidelines is a must. Responding to issues and pull requests is a must.,guidelines,,
378,,,,
379,,,,
380,Be kind to newbies :),compassionate,,
381,"Have an IRC presence, include their IRC/Mailing lists in the project read me.",communication channels,,
382,,,,
383,,,,
384,,,,
385,"Write clear guidelines, PR project offline, have an step-by-step instruction how to contribute to the project (with images).",guidelines,,
386,"Give guidelines, check the posted contributions often and give feedback if the the change can not be merged",guidelines,responsiveness,
387,Good readable source code.,code readability,,
388,"When you say new contributors, do you mean new programmers trying to contribute or those with experience. This question is a bit ambiguous and am going to answer it from the perspective of some with at least a years experience.   There should be a read me and a some sort of common style guide that the project follows. The first four options from question seventeen would be really helpful as well.",guidelines,,
389,"automatic pull request validation, it reduce the burden on the reviewers and provide quick feedback on 'stupid' problems.",testing,,
390,more docs,documentation,,
391,"Provide guidance for contributors, documentation, unit tests",compassionate,documentation,testing
392,Giving a feedback for every pull requests,responsiveness,,
393,Comment on pull requests and help actively until merging.,responsiveness,compassionate,
394,Better documentation of software architecture.,documentation,,
395,Include unit tests so it's easy to verify your changes don't break anything.   Have consistent coding style so it's easy to write your code to match.   Have a good readme and basic documentation.,testing,documentation,
396,Not require signing of non-standardised license agreements.,licensing,,
397,,,,
398,having more than one maintainer (which may delay application of merges),responsiveness,,
399,Have an active community.  The latest commit should not be commited 1 year ago  The issues should be addressed by other people => less open issues.,responsiveness,,
400,lack of documentation and missing roadmaps are the biggest roadblocks IMHO.,documentation,roadmap,
401,Document their code.,documentation,,
402,Clear guidelines,guidelines,,
403,,,,
404,"clear coding guidelines, quality standards",guidelines,code quality,
405,Write more guidlines,guidelines,,
406,"Have a good tuto on how to setup and make some visible changes in 5 minutes (ie what parts of the code do what kind of thing, what is the flow when I click on this button, etc)    Other than that, git knowledge is somewhat needed for contributions to be accepted.",guidelines,task list,
407,prompt feedback on pull requests,responsiveness,,
408,,,,
409,"Provide contribution guidelines, cover core functionality with tests,  document plans (e.g. roadmap)",guidelines,testing,roadmap
410,Have a contribution guide,guidelines,,
411,Create a clean CONTRIBUTING file at the root of the repository.,guidelines,,
412,reduce time consuming technical barriers,,,
413,clear documentation and guidelines on how to contribute (suitable even for beginners),documentation,guidelines,
414,,,,
415,,,,
416,Keep work related to pull-requests low (e.g. do not require additional entry in external bugtracker),standard tools,,
417,Be friendly and encouraging in discussions.,compassionate,,
418,"Instructions to setup a development environment (with IDE)  Open but maintained wiki with manual / tutorials  Official enhancement proposals (like Python - PEP, Java - JSR)  Code of conduct for maintainers",development environment,documentation,task list
419,There sould be always a simple roadmap or some open issue to solve.,task list,,
420,,,,
421,Provide clear and detailed instructions and list of small issues for starters.,guidelines,task list,
422,,,,
423,,,,
424,,,,
425,"Getting started doc, human contact",documentation,compassionate,
426,,,,
427,,,,
428,,,,
429,,,,
430,Ultra clear steps to contribute for all platforms,guidelines,,
431,call out for help,explicit call for contrib,,
432,Review more promptly,responsiveness,,
433,* Friendliness  * Awesome communication,compassionate,communication channels,
434,"Moving to github, or at least git, on the first place :)  Code documentation is usually good to get hands on projects.",standard tools,documentation,
435,,,,
436,no idea,,,
437,Clearly describe how to contribute.  Clearly describe the leadership / management model.  Eagerly accept pull request into main source and thank contributor.,guidelines,compassionate,
438,Have people as bug wranglers and reply to any issues/PRs open within 2-3 days.,responsiveness,,
439,"Automated testing, better communication from maintainers - nothing worse for a PR than have it rot in the queue without any comments",testing,responsiveness,
440,Give clear guidelines for the basis on which PRs will be accepted or rejected,guidelines,,
441,Give also feedback about PR's quickly so new contributors feel their work important.,responsiveness,compassionate,
442,"Merge pull requests often, clear communication in issue handling, hire developers and pay them.",responsiveness,communication channels,
443,,,,
444,Review quickly the PR to tell what's wrong and what could be done better. To be short : start a conversation.,responsiveness,compassionate,
445,"Communicate how they want pull requests handled (main branch, feature branch, etc) and respond to pull requests quickly. I recently spent hours and hours on a feature to have the pull request rejected without review because the owner wasn't accepting any pull requests because he's planning to make big changes (which he didn't detail). It sucked, so I forked his project and am maintaining my own now.",guidelines,,
446,"publish guidelines, encourage more communication between contributors,and don't let pull requests languish for weeks",guidelines,communication channels,responsiveness
447,"Provide a well-defined contributor documentation in a centralized location instead of having notes spread throughout issues, PRs, etc.",documentation,,
448,Be more active reducing number of PRs.,responsiveness,minimize queue,
449,,,,
450,,,,
451,- If a popular project goes unmaintained there should be a way still contribute.  - Clearly labelling low hanging fruit in the bug reports.,task list,,
452,,,,
453,,,,
454,good project documentation  clean source with useful comments,documentation,code readability,
455,,,,
456,Write documentation specifically targeted for people who want to hack on the source code.,documentation,,
457,"Have examples of what makes an acceptable contribution, including (especially) small contributes.",examples,,
458,"Depends on the project, I think the mindset of potential contributors themselves are the largest barriers.  I never had problems contributing to a project, as long as you realize every project is different.",nothing,,
459,,,,
460,Use the GitHub wiki to write a nice guide on how to configure the build environment and start to compile.,documentation,development environment,
461,List accessible starter issues.,task list,,
462,Public issue tracking so that I can start by selecting open issues.,task list,,
463,"Provide pull request guidelines, a documented build system and a good test suite.",guidelines,testing,
464,,,,
465,Allow you to set up quickly,development environment,,
466,Contribution Guideline.,guidelines,,
467,,,,
468,Have clear guideline  Have a list of entry level (low priority) tasks,guidelines,task list,
469,,,,
470,i find that enabling pull requests is great :)    for complex projects architecture docs and getting started guides and examples can be good (say something like Blender)    for simple projects (say some js lib for web UIs) it can well suffice just for the code to be there in a well organised manner. and the code itself being clear.,documentation,architecture to fit contributions,code quality
471,"Address pull requests (comments, review, merging, etc) not radio silence",responsiveness,,
472,"Supply developer documentation, esp. Coding guidelines",guidelines,documentation,
473,I don't know.,,,
474,Keep an active maintainer.,responsiveness,,
475,,,,
476,Make auto build on Travis.  Add test to project.,continuous integration,testing,
477,"React quickly to suggested change, be it in idea phase or in pull-request phase.",responsiveness,,
478,active project lead developers  getting answers in IRC  contributor friendly tagged issues,responsiveness,communication channels,compassionate
479,,,,
480,,,,
481,A contributor guidelines and quick response on pull request,guidelines,responsiveness,
482,good documentation,documentation,,
483,,,,
484,periodic conference calls with developers to discuss upcoming features/releases and major bugs that need to be completed.,communication channels,task list,
485,,,,
486,"Make setting up the development environment easy and quick. Have single commands for building, testing and running the project, if applicable.",development environment,,
487,"Have clear guidelines, have unambiguous tests (e.g. not a lot of infrastructure or Special Magick&trade;) required to run them, and ADDRESS THE PULL REQUESTS (positive or negative, but don't let them just rot for months on end)",guidelines,standard tools,responsiveness
488,,,,
489,"Good guidelines, well-written code, and a friendly community.",guidelines,code quality,compassionate
490,"Automate the simple stuff (license headers, white space, etc). Label ""starter"" or ""newbie"" issues, as well as ""this is a cool idea but we don't have time to work on this"" issues. Be fast with PR feedback. If you don't accept a PR, explain why. Automate testing via TravisCI or similar.",continuous integration,task list,responsiveness
491,"Maintain the project active, responsibly manage the PRs, do not reject external contributions regardless of size, review them carefully.",responsiveness,review process,
492,They can show success,,,
493,Ensure that interfaces are clean so that one can focus on a specific part of the project.,architecture to fit contributions,,
494,Just work,,,
495,"If the project is large, document explaining high-level architecture and folder structure helps. Issues that are easy to fix help new contributors get started.",documentation,task list,
496,Respond quickly to issues and PRs,responsiveness,,
497,* Run test easily,testing,,
498,Prompt feedback to new issues and pull requests. Getting started documentation. Guide describing overarching project architecture and how the pieces fit together.,responsiveness,documentation,
499,,,,
500,Have detailed and unambiguous instructions for initial setup,documentation,,
501,,,,
502,,,,
503,,,,
504,respond to issues/pull requests/list posts in a timely fashion. even just acknowledging the issue and suggesting an attack plan is immensely helpful.,responsiveness,compassionate,
505,,,,
506,Have clear contribution guidelines and streamlined review process,guidelines,review process,
507,"Easy ""How to get started"", development enironment configurations",documentation,development environment,
508,,,,
509,,,,
510,,,,
511,,,,
512,"Have a list of small, but not totally menial issues ready to be solved by newcomers.",task list,,
513,,,,
514,Be nicer. I don't mind if my request is denied. Just don't tell me I'm an idiot for my implementation.,compassionate,,
515,More clear on how they want to work with the community.,explicit call for contrib,,
516,use git,standard tools,,
517,,,,
518,Have strict guidelines about the format of pull requests. Repository control using tools like GitHub is vital. A quick response time to new issues and pull requests helps a lot too.,guidelines,responsiveness,
519,Have a list of issues that are clearly targeted for newbies (does not require a lot of prior knowledge). Helpful members and responsive mailing list. Generally positive encouraging atmosphere in comments.,task list,responsiveness,compassionate
520,,,,
521,"Provide better documentation of expected code style, contributing guide lines, and testing guide lines, and, if possible, personally guide new contributors through the process",guidelines,compassionate,
522,typically the barrier is that the required knowledge to contribute on a project is fairly high for the bigger projects.  For the smaller projects it is much easier because the needed knowledge to understand the code base is fairly small and quick to learn,,,
523,"Have engaged, regular and responsive committers to discuss with",responsiveness,communication channels,
524,keep active.,responsiveness,,
525,"No flood of open PR and issues sitting there for like 1+ year, this looks bad and unmaintened",minimize queue,,
526,"Write good, concise but solid /CONTRIBUTING.md & /README.md:s",guidelines,,
527,Up for grab items like codeplex's entityframework.,,,
528,"good documentation in and for the code, frequent use of issues and pull requests even by the project owner.",documentation,,
529,"This is more like ""speak with a girl"" you know when its the time, with the pull requests its the same think, I think the current way is very good, and the best way is try make a code with a relative propouse or a motive that will help the library, and put your heart on the code.",nothing,,
530,"(in order of importance)  Fast response in the issue tracker  Ability to run the software and test suite directly from a git clone, without installation or other intermediate steps.  Have contributor guidelines, including a detailed git workflow  Have an automated test suite, better if run by travis  Good coverage gives bonus points.",responsiveness,development environment,guidelines
531,,,,
532,,,,
533,"Better documentation, a call for more contributors on the front page.",documentation,explicit call for contrib,
534,Project leaders should give thorough guidelines for contributing and building the project if the building process is complicated and/or not automated; they should be friendly and open to communication.,guidelines,compassionate,compassionate
535,,,,
536,Reduce backlog of open pull requests,minimize queue,,
537,More pedagogic documentation for developers.  Wiki entry: features or bugfixes suggestion for newcomers.,documentation,task list,
538,- Avoid needing Contributor License Agreements.  - Be responsive. Always give an answer to pull requests or issues.,responsiveness,licensing,
539,"Provide feedback, even if it's just a rejection based on personal taste/ideology.",responsiveness,,
540,Use github  The combination of git + web is very powerful and easy to contribute,standard tools,,
541,"Have an excellent documentatuion that explains the structure (modules, files structure) & how build and test the project to make it easy for newcomers to contribute.",documentation,development environment,testing
542,,,,
543,more contributor docs,guidelines,,
544,travis-ci is useful because only we should do is just pushing branch. We must have CI.,continuous integration,,
545,,,,
546,Founders/core maintainers often play favorites with certain developers/features.,compassionate,,
547,Have good documentation. Have simple and thorough examples.,documentation,examples,
548,,,,
549,"Avoid to insist of coding style, other similar things before merging contributions. The maintainer can always change things if he doesn't like code style or others.",compassionate,,
550,,,,
551,"Active technical support is the key to success. When developers are open to discussion, it encourages others to contribute more.",communication channels,compassionate,
552,"Clear statement of whether pull requests are actively sought, and how pull requests should be formatted.",guidelines,,
553,Biggest help would be interaction with contributors and proper guidelines,communication channels,guidelines,
554,"- use GitHub instead of some less popular services (e.g. Bitbucket, Gitorious, Google Code);  - provide some issue tracking system where tickets have labels assigned by core devs like ""difficult"", ""easy pick"" etc. (e.g. system used by Django project);  - provide guidelines (coding style!) and some IRC channel (on Freenode).",standard tools,task list,guidelines
555,How to contribute guidline.  Acquaintances who has been contribute to.,guidelines,,
556,,,,
557,,,,
558,Better docs.,documentation,,
559,respond quickly to pull requests,responsiveness,,
560,,,,
561,- Creating clear issues  - assign labels to issues with easy picks  - clearly stating a CONTRIBUTING file,task list,guidelines,
562,The best thing in my opinion is to clearly outline what is expected of contributors in a document and then either have that document in the README or link to it.,guidelines,,
563,"Openly encourage pull requests, being non-judgemental is helpful.",compassionate,compassionate,
564,"Have a good guidelines how to contribute, have tests and continuous integration, have a roadmap to decide where is free area to contribute, quickly react on questions/issues/pull requests",guidelines,continuous integration,roadmap
565,Insure all code review / feedback is handled positively. Process pull requests within a few weeks. Insure contributions reference bug #. Have detailed test suite.,compassionate,responsiveness,testing
566,"Be better at responding to pull requests ;-) I know it's a tall order, but there's so many pull requests out there that don't get any response.",responsiveness,minimize queue,
567,Be consistent.,,,
568,"1) Respond to pull requests quickly.  2) Give feedback on pull requests, either by accepting or by giving a reason for rejection.  3) Strive for readable, maintainable code.",responsiveness,code readability,
569,,,,
570,,,,
571,,,,
572,Don't be assholes.,compassionate,,
573,,,,
574,I think problem is not getting new contributors. Problem is getting quality contributions. Github makes it almost too easy to send a pull request. People do not bother even to follow existing code standards etc...,not desirable,,
575,,,,
576,"Clearly explain what is needed for a pull request to be accepted (code guidelines, quality of code, requested features). Also, making sure the number of open pull request is as low as possible, and the open pull requests are actively monitored and discussed.",guidelines,minimize queue,compassionate
577,"Provide clearer up-front guidance about CLAs, expectations around prior agreement about what features would be accepted.  Ensure the project builds and runs tests cleanly in a single step with no unusual external dependencies.",guidelines,automate builds,standard tools
578,,,,
579,Document the project as it exists now and how they would like it to be in the future. Also lists of tasks that people can take on are a nice way for people to feel contributions are welcome without requiring permission.,documentation,roadmap,task list
580,,,,
581,,,,
582,,,,
583,"More communication, clear guidelines of how to contribute, and receptiveness/positive handling of any and all contributions.",communication channels,guidelines,responsiveness
584,Make it as easy as possible to understand the code. Have a simply build process to validate any changes.,code readability,automate builds,
585,Don't use separate Issue tracking.  Give feedback to PRs,responsiveness,standard tools,
586,,,,
587,"Mark submitted issues as ""novice friendly"" or similar. Adding contribution guidelines files.",task list,guidelines,
588,Include a list of low-priority changes or bugs for new contributors to work on.  Better document how to initiate contact with repo core team.,task list,guidelines,
589,It is already pretty easy.,nothing,,
590,Guides,guidelines,,
591,clearer guidelines on workflow and acceptable PRs,guidelines,,
592,,,,
593,Good development documentation.,documentation,,
594,,,,
595,"Identify feature requests / bug fixes that should be easy for new contributors.    DO NOT use strict style checking code, such as flake8 or jslint. It is a waste of everyone's time.",task list,,
596,,,,
597,"Good documentation with own chapter ""Contribution Guideline""",documentation,guidelines,
598,Don't know.,,,
599,,,,
600,"To claim, that people should not be silent, then they see a bug, not translated text or similar.   Show way how to contribute.  To give fast feedback about your bug report/ pull request - it very motivates.",compassionate,guidelines,responsiveness
601,"Providing downloadable binaries for several platforms would be a huge benefit. The biggest problem taking on new projects is having to build them in the first place, just to see what they do.",development environment,,
602,Respond to issues quickly; have a good test suite a documentation on how to run it.,responsiveness,testing,documentation
603,Have up to date architecture documentation. Having to figure out the layout of a code base by detective work is hard.,documentation,,
604,http://symfony.com/blog/the-symfony-core-team-is-back,,,
605,Make sure it's easy to submit pull requests.,,,
606,,,,
607,,,,
608,,,,
609,"1. Good automated testing including integration testing. so contributors could be sure they won''t break anything.    2. quick and polite responses     3. tagging issues as ""fitted to new contributers""    4. explanation and examples of testing startegy and testing tools used",testing,responsiveness,task list
610,,,,
611,Maybe describe strategic plans for future development direction for a project. It should help understand right direction for writing code.,roadmap,,
612,Spent more time on accepting and documenting code.,responsiveness,documentation,
613,Good quesstion. I have no idea :-),,,
614,,,,
615,Spam more,,,
616,have tests and automate testing compilation systems. Have open issues that are interesting. Give commit access easily.,testing,task list,
617,Have a visible and active community.,responsiveness,community visibility,
618,,,,
619,Provide guidelines on how to contribute and good documentation.,guidelines,documentation,
620,"* encourage pull requests in readme  * Provide a one click experience to provision and configure a project development environment for me to work on my contribution.  * Projects that with unusual conventions, no conventions, poor organisation, un-readable code and no documentation, or no high level behavioral tests",compassionate,development environment,
621,"Provide a roadmap, or pointers on how to send their first pull request",roadmap,guidelines,
622,,,,
623,,,,
624,Provide feedback on rejected pull requests.,responsiveness,,
625,,,,
626,NA,,,
627,,,,
628,"PR guidelines, quick feedback (not necessarily action) on PRs",guidelines,responsiveness,
629,,,,
630,Provide build and test instructions for various platforms.,documentation,,
631,I'm don't know,,,
632,"Be friendly and accessible never hurts. I doubt it should be a project goal to have many contributors. It sounds great at first sight, but the quality of the work decreases.    A vcs is another barrier. It's great if you understand it, but new users are mostly just heavily confused. git adds a few layers in being technically orthogonal rather than providing intuitive primitives. (git branch does everything with branches, except switching).    In my view, pull requests add another barrier. They are a logical extension when you're in the mindset of vcses, but I see people struggle with them.",not desirable,,
633,"Documentation, list of ToDo",documentation,task list,
634,Improve code review.,review process,,
635,,,,
636,"labels like 'new comers', 'easy to pick'. Helpful and supportive in pull requests, IRC,  issue tracker.",task list,compassionate,
637,Easier communication about potential pull requests.,communication channels,,
638,"ToDo lists, CONTRIBUTING.md, have somewhat recent (past 4 months) PR accepted, reply to issues with in a week.",task list,guidelines,responsiveness
639,,,,
640,"Better human organization to understand what contributors' priorities are and how they relate to the project's goals.  I'm dissuaded from contributing when I see lots of effort poured into flashy features I see as unimportant, in preference to fixing bugs that are showstoppers for my own use of the software.",task list,contributors priorities,
641,Include notes about building and testing the project.,documentation,,
642,"Provide suggestions for easy tasks, provide feedback and encouragement, provide pointers to good examples in existing codebase (very important for large complex projects).",task list,compassionate,examples
643,"Rapid triage of new requests, proper documentation, good code comments, properly modularized code.",responsiveness,documentation,architecture to fit contributions
644,Contributor guidelines are a BIG plus.,guidelines,,
645,I think using git is tricky at times specially for new users. I think will be good to provide some simple examples for people new to git on how to contribute to the project. I know git has it and github also provide examples but maybe the code owner can also provide some simple guide lines.,examples,guidelines,
646,- provide ready means for upfront communication about features.  - deal with PRs quickly even if that means closing them  - have written guidelines.  - if you care about style an automated tool for linting.  - have runable tests,communication channels,responsiveness,continuous integration
647,,,,
648,Communicate,communication channels,responsiveness,
649,"Walkthroughs of recent simpler pull requests, including background.",documentation,,
650,Provide code format compatible with ides,development environment,,
651,"Better guidelines and some place to have a discussion.    Guidelines don't have to be fully documented -- something as simple as ""here's a sample file, make your contributions fit this style"". The rest is up to the developer to read through and understand.    Be open to questions.",guidelines,communication channels,responsiveness
652,,,,
653,Have fewer assholes,compassionate,,
654,,,,
655,I only collaborate with people I meet at least weekly. There are no barriers in those projects.,nothing,,
656,"Describe testing expectations well, and make it easy to understand how to:   - Run existing tests   - Write new tests    Have a good onboarding process for new developers. Be very encouraging of people who are willing to contribute, even if they don't follow the proper protocol initially. The OpenStack project has an #openstack101 channel IRC devoted entirely to helping new contributors.     - For users unfamiliar with Git, submitting a non-trivial pull request is probably pretty tough.",guidelines,compassionate,communication channels
657,make their needs clear,contributors priorities,,
658,Documentation and guidelines are crucial.,documentation,guidelines,
659,Offer a clear document explaining what they require before a pull request gets merged (examples would always be nice!),guidelines,examples,
660,Tag issues that are suitable for newcomers,task list,,
661,"More automatic testing of PRs, more assurance for new contributors that they're not introducing bugs (reduces ""first contribution stress""), more reviewing.",testing,review process,
662,"Have a well-defined readme, with a clear guide on what the planned future for the project is, or a guideline for which features or bugs need to be worked on. Projects which are documented as ""Work in progress, experimental, may or may not build on this/that platform, not tested"" are a red flag.",roadmap,task list,
663,"Use standard tools (i.e., use GitHub for everything). Merge pull requests quickly. Be kind and welcoming.",standard tools,responsiveness,compassionate
664,"Good documentation how to set up your dev environment, contribution guidelines if applicable, conceptual level documentation.",documentation,guidelines,development environment
665,Invite them to contribute something! Explicitly stating that new contributors are welcome will definitely increase the number of those. :-),compassionate,,
666,"Make sure new PRs get speedy review, especially from the core team that will have to maintain whatever is submitted.",responsiveness,review process,
667,,,,
668,give me an estimate on how long they will take to at least respond to the PR,analytics,,
669,More documentation and more open discussion,documentation,compassionate,
670,Actively review PRs when sent and communicate with me before I do the work to create the PR.,review process,,
671,Have better documentation and associated gh-pages branches.,documentation,,
672,,,,
673,Engaging project lead/core team that is reachable and friendly on IRC/Mailing Lists,compassionate,communication channels,
674,"quick response time to issues and ideas.  Keep a good discussion forum going (google groups, etc).    Good documentation for project architecture, if any.",responsiveness,communication channels,documentation
675,"Offer wanted lists, e.g. what a project needs doing",task list,,
676,,,,
677,Make source install issue.,,,
678,,,,
679,,,,
680,,,,
681,Provide lists of low-hanging fruit,task list,,
682,,,,
683,the existence of guidelines and leadership,guidelines,availability,
684,swift reaction to PRs,responsiveness,,
685,,,,
686,,,,
687,publish how to commit,guidelines,,
688,,,,
689,,,,
690,"Display a metric for average days per PR. People contribute when the have a problem.  If they can have an expectation of lead time for resolution, it would incentivize them to help address the problem.",analytics,,
691,,,,
692,,,,
693,Include contributor guidelines and roadmap,guidelines,roadmap,
694,?  I'm on only one project,,,
695,Simple yet complete README,guidelines,,
696,,,,
697,Have clear contribution rules.  All maintainers should agree on all contribution and project rules.  High standard review process.,guidelines,review process,
698,"Generally, it's good to know that your work as a contributor will actually go somewhere. It's important to have visible examples of things happening regularly (pull requests being reviewed/merged/closed, etc.), and it's important to have some way to communicate with the core team other than through pull requests/issues. Pull request guidelines help, but without a way to have an actual conversation with somebody on the core team, a contributor's first contact with the project team will be in the context of code. That can be very intimidating for fear that the reaction will be ""you have done this wrong"" instead of ""thank you for your contribution; let us help you get this figured out.""",availability,compassionate,communication channels
699,"Encourage people to contribute and activate communicate in Issues, mailing lists, IRC etc.",compassionate,communication channels,responsiveness
700,,,,
701,"Provide examples in the README, get people interested in the project.  Make it easy to get started",examples,development environment,
702,"Make it easy to get started, example tests. Would be great if GitHub had standard fields to make links to guidelines easy to be found.",examples,guidelines,
703,Tag easy issues,task list,,
704,"Open more channels for interactive communication, pull requests are not made for this. In fact very good discussions in pull requests are just lost after the pull request is closed, since they are not indexed/archived by google together with the relevant code.",communication channels,traceability for comments,
705,,,,
706,,,,
707,,,,
708,"Use standard system like github, have clear expectaions, respond in a friendly and timely fashion.",compassionate,compassionate,responsiveness
709,,,,
710,"New contributors that are interested in a long-term role could be given a chunk of the firehose of tasks, issues, pull requests, etc., so that they feel like they are part of the process.",task list,compassionate,
711,"Setup guides on how to run locally or in a test environment, project structure, and a good test suite.",guidelines,development environment,
712,Not sure?,,,
713,,,,
714,Contribution and testing guidelines,guidelines,,
715,,,,
716,Clearly document how contributions are accepted.,guidelines,,
717,,,,
718,Communicate simple bugs to fix. Welcome new contributor.  Encourage innovation.,task list,compassionate,
719,write clear documents,documentation,,
720,easier identification of bugs the maintainers think are appropriate for new developers,task list,,
721,,,,
722,To have mentored bugs/features to help new contributors to know better the project so they have an easier entry point to start contributing.,compassionate,task list,
723,Be more flexible with contributiuons guidelines,compassionate,,
724,guidelines,guidelines,,
725,Make it clear how to contribute in their website and respond to contributors' queries timely,guidelines,responsiveness,
726,,,,
727,"roadmap, guidelines, friendly atmosphere",roadmap,guidelines,compassionate
728,"I usually contribute to projects I have some way of knowing my pull request will be accepted provided I've accomplished what I've set out to do in an acceptable manner. Typically this is done through IRC or email, though sometimes a repo will make it clear that certain features are being looked for, or that certain types of cleanup and improvements are welcome, and in those cases I can bypass needing to discuss with someone in advance.",compassionate,task list,communication channels
729,,,,
730,,,,
731,"When anyone open a issue, the project owner say: ""send a PR""",compassionate,,
732,,,,
733,"Define contribution guidelines and offer support info on how to contribute (using git, discussion, etc)",guidelines,communication channels,
734,,,,
735,Create useful documentation and coding guidelines.,documentation,guidelines,
736,"List of low-hanging fruit issues which new contributors can take a look at; source code docs, so that one is able to figure out what something does in the larger scheme of things (specially if the project is massive), an active development IRC channel and mailing list, constructive code reviews",task list,documentation,communication channels
737,Inviting communication on the project website.  Fair treatment of PR from newbies.  Help newbies with things like rebase etc.  Step by step tutorial for contributing (specific to the topic/project).,compassionate,guidelines,
738,write contributing how-tos like https://github.com/burke/zeus/blob/master/contributing.md,guidelines,,
739,Take a look at what happened to OpenSSL - maybe it would be better the other way round.,not desirable,,
740,"Documentation, easy to read code.",documentation,code readability,
741,"Good IRC system, when you can contact.  Some documentation.",communication channels,documentation,
742,"Missing option for question 17: the only thing that matters for me to decide which project to contribute to, is whether the project is somehow useful to me, and whether I can make a useful contribution. All the other stuff about roadmaps and bugtracking hardly matters.",,,
743,Internationalisation is a key topic for lower barriers,i18n,,
744,,,,
745,Just use Github and a clean and easy getting started documentation.  Examples ect.,documentation,examples,
746,,,,
747,"it should be easy to find the related code. A wiki explaining the project structure, a sane project structure, readable code and occasionally code comments can help finding the right piece of code.  Contributor guidelines.  Respond quickly and friendly to PRs.",documentation,guidelines,compassionate
748,have continuous integration setup for the Pull Requests  have a simple way/instructions to create the dev environment (or even access to a dev environment already setup or a vm),continuous integration,development environment,
749,Clear coding style guides,guidelines,,
750,Be more responsive,responsiveness,,
751,Very responsive google group did really convinced me to contribute to atk4/atk4,responsiveness,communication channels,
752,Know who is active developer on irc.,communication channels,,
753,,,,
754,"that depend on the project, but having more reviewers is usually better",review process,,
755,Have dedicated issue/pull-request triage process and have that documented.  e.g. so I know that someone will look at and comment on my pull-request within a given timeframe.,review process,guidelines,responsiveness
756,,,,
757,Prepare the FAQ and/or other documentation and keep it in a shape.,guidelines,,
758,,,,
759,More feedback,compassionate,,
760,Appreciate other people work even if they are not up to quality and have to me refused,compassionate,,
