,x,tag1,tag2,tag3
1,Own judgement,code review - self,,
2,Code review by project owners,code review - after,,
3,I review it against coding guidelines and take advice from the project committer assigned to the issue.,project compliance,advice,
4,A quick look at files changed,code review - self,,
5,manual testing,testing - manual,,
6,"I make the changes I think are necessary and then leave them alone for a couple of days. After that I review my changes again, and change them if necessary, before submitting the pull request.",code review - self,,
7,I show it to others in my own branch (and test it obviously),code review - self,testing,
8,By unit test.,testing,,
9,I access whether I have completed the required task relating to the PR completely,,,
10,I run unit tests and simulations/experiments before asking for the merge.,testing,testing - manual,
11,"Tests pass, or at least no more are failing if the test suite was already failing.    Sometimes run it by a colleague.",testing,,
12,By viewing the diff,code review - self,,
13,"Testing, and I run static checks (pep8, pyflakes)",testing,static analysis,
14,fair,,,
15,"I verify it works as intended, the code matches the existing style, and it contains only the minimal amount of code change necessary to implement the feature.",testing - manual,project compliance,self contained
16,I tested it,testing,,
17,"Passes tests, meets coding guidelines",testing,project compliance,
18,"Do tests pass, does the functionality work for me.",testing,testing - manual,
19,I test it,testing,,
20,local testing,testing,,
21,Re-reading the text,code review - self,,
22,Oen tests,testing,,
23,I do my own code review while committing and before submitting the pull request.,code review - self,,
24,"In order - Whether it passed automated tests, how much I trust the person, how much they have worked with us, reading the code.",testing,code review - self,
25,Reading the code and writing/running tests,code review - self,testing,
26,I test that it does what it says that it does,testing - manual,,
27,"I ask myself these questions,    1. Has it solved the issue?  2. Is the change documented?  3. Is the change easy to understand and follow?  4. Does the change follows coding conventions?",address issue,documentation,project compliance
28,Test against my use case and run regression tests,testing - manual,testing,
29,tests pass,testing,,
30,average,,,
31,"Unit tests, regression results from automation reports from continuous integration system.",testing,continuous integration,
32,"code review, unit tests, scenario tests",code review - self,testing,testing - manual
33,"Test the changes, take one final look at the entire diff.",testing,code review - self,
34,"Test suite, style lint, CI",testing,static analysis,continuous integration
35,"make sure there is a [detailed] story explaining what it is and why it should go in, style the code according to project owner preferences (as much as I can stomach ;-)), make sure test suite passes (assuming there is one), check CI (i.e. travis) gives a thumbs up.     in short: make the PR easy to accept, the bigger it is the more attention it needs ... I don't want to waste time by creating PRs that get rejected, the best way to do that is to make it really easy (technically and emotionally) for the maintainer to hit the merge button",makes sense,testing,project compliance
36,"visual code inspection, and direct testing.",code review - self,testing - manual,
37,"linting, CI",static analysis,testing,
38,"I ask myself, once I submit this request, can I still look myself in the mirror each morning?",self appreciation,,
39,I review it using Github's interface.,code review - self,,
40,By checking the diff to current remove master branch,code review - self,,
41,By following code conventions,project compliance,,
42,unittests,testing,,
43,tests / documentation coverage,testing,documentation,
44,Tests exist and are green.,testing,,
45,At first I review it manually. Also our repository is configured so that each PR gets automatically tested by both Travis CI (unit tests) and Scrutinizer (code quality tests).,code review - self,continuous integration,static analysis
46,experience,code review - self,,
47,By requesting reviews from my collegues. Each PR requires at least two +1's.,code review - self,,
48,I do it so it's good,,,
49,refactoring and passing CI,testing,continuous integration,
50,"I'm very unsure about this step, and it sucks.",self appreciation,,
51,I do a review of my own changes before asking for a review.,code review - self,,
52,"It should be focused of the feature to implement (or bug to fix). Nothing unrelated to the topic should be in there. Also there should be proper commit messages (title should be copy+pastable to a changelog, and the desc should describe what it does). Also, the code itself must comply to the projects idea of how code should look like.  I tweak my code to fulfil these points before I create a PR.",address issue,commit quality,
53,Make sure it passes the R CRAN check,testing,,
54,"Travis CI, Tests, validate against code style of rest of project",continuous integration,,
55,Another team member reviews each pull request before our leader does a quick review and does the pull into the trunk.,code review - peer,,
56,"As soon as I have something I want input on I submit it. A PR is the beginning of a discussion, not the end.",discussion,,
57,"I always write regression tests for the changes;  Sometimes if i'm in doubt about the quality, I ask my advisor for a code review before opening the pull request;  sometimes I ask the team to run the testsuite on the test server   (due to some build issues I cannot run all tests locally)",testing,code review - peer,testing - peer
58,"Depending on the type of pull request, I'll recompile the project's files to ensure my pull request doesn't introduce any issues, run my changes through validators, perform link crawls, etc.",building,validation scripts,
59,"I'm a scientists on the perhiphery of a development team, with ill-defined responsibilities with respect to code maintenance.  Sometimes I provide tests and documentation; sometimes I provide code.",,,
60,review the file changes,code review - self,,
61,I write unit tests and run it locally before submitting the pull request,testing,,
62,"Run the tests, push them to my repo, tests are run by travis-ci.  Do a git diff.",testing,continuous integration,code review - self
63,Over years of experience you generally have a feel for what quality code is.,self appreciation,,
64,I test and review the diff of both the original history and the rebased history.,testing,code review - self,
65,Run unit tests,testing,,
66,By testing togheter with the team leader,testing - peer,,
67,"unit tests, JSHint, JSCS",testing,static analysis,
68,-,no assessment,,
69,Unit and Integration Tests pass against code merged with latest commits.,testing,,
70,I hope it is sufficient,no assessment,,
71,"I test the code for its basic use cases plus all edge cases I can think of. If the code requires unit tests, I add unit tests. I also run the existing suite of unit tests.",testing - manual,testing,
72,Diff it and run tests if any,code review - self,testing,
73,Am I happy for others to see it?,self appreciation,,
74,"Does it solve the problem (or part of the problem)? Are the commit messages clear and do the commits in the PR tell a story? Are there tests? Is there documentation, if required?",address issue,commit quality,testing
75,"I look at the Travis build on my branch to confirm that it is passing. I also try and do some testing with the openhatch ""test environment"" setup if possible.",continuous integration,testing - manual,
76,"by an exhaustive test suite run automatically on each pull request using travis  by exhaustive pre-commit hooks doing code tests using scan-build and splint, also running scripts to check for coding convention.",continuous integration,testing,validation scripts
77,"Running the test suite locally, also wait for the results of Travis CI (okay, that's after submitting)...",testing,,
78,I test it locally,testing,,
79,"Well, I do my best and then improve my code based on the code review.",code review - self,,
80,"Often using code checkers (PEP8, PyLint, etc. etc.) and running project's test suites; sometimes with some additional testing or a ""give-it-a-day"" delay between coding / preparing and submitting.",static analysis,testing,testing - manual
81,Writing and running tests for the new algorthm,testing,,
82,I don't unless it is rejected and I am told to.,no assessment,,
83,By testing it before sending pull request.,testing - manual,,
84,Test and make sure they work as expected before sending PR.,testing - manual,,
85,"The project has a thorough test suite.  I check to ensure that, at a minimum, I haven't broken any tests and I add tests to cover my changes.",testing,,
86,Build and run tests,building,testing,
87,visual review & test run to confirm validity,code review - self,testing,
88,Various lint tools,static analysis,,
89,Testing locally and making sure to code and commit from a clean state.,testing,branching strategy,
90,"Clean, unobtrusive, to the point.",,,
91,"The most important thing is to get the last commit to a known state i.e. don't merge features which only has been tested separately or are independent. In order to fullfill this I create a separate pull-request branch, most of the time I do this before making any changes. To this branch I only commit clean code, hacks and experiments I only commit to separate branches. Bevore submitting the request, all tests (often only manual tests) are applied and have to pass",branching strategy,testing,
92,Combination of number of tests written + number of docs + how small the request is. Usually smaller PRs are better since they change less code and have fewer moving parts.,testing,documentation,
93,By running the code inside out...?,testing - manual,,
94,i dont,no assessment,,
95,"Testing it works correctly, on production if needed.",testing - manual,,
96,i'm not what is being asked here,no assessment,,
97,Manual testing & automated tests if I see how to run them.,testing - manual,testing,
98,ensure all tests are passing,testing,,
99,"Testing, elegance of code.",testing,self appreciation,
100,Test manually and run tests,testing - manual,testing,
101,Peer review,code review - peer,,
102,Compare my branch changes with the branch I'm doing the PR against.,code review - self,,
103,Using git diff,code review - self,,
104,We have pep8 and pylint checks. Also have test coverage reports. All these are run authomatically on Jenkins every time we push a change to the PR code.,static analysis,continuous integration,coverage
105,"Formatting in the github diff is clean and readable. No whitespace errors, all unit tests pass.",code review - self,testing,
106,Medium,,,
107,Mixed.  Most of the times I send a public PR to my own repos to improve the PR with other collaborators,code review - peer,,
108,.,no assessment,,
109,Testing and peer review,testing,code review - peer,
110,I run the unit test suite before my changes and after them.,testing,,
111,Most of the times the bugs are obvious. Sometimes by writing unit tests against them.,self appreciation,testing,
112,"This application has limited automated testing, so I primarily do manual testing of functionality related to the change that I'm making.",testing - manual,,
113,All tests pass. Code coverage.,testing,coverage,
114,It's tested for at least a day before pushed to the repo.,testing,,
115,run php-cs-fixer and checkstyle. Always write tests if functionality changes.,static analysis,testing,
116,Automated test  CS Fix  Visual quick control,testing,testing - manual,
117,"Whether it is useful, maintains code coverage, introduces first a failing test and then a fix (if applicable)",,,
118,test,testing,,
119,I test functionality.,testing - manual,,
120,"a pull request is a living creature, it is ready when it is ready. I often iterate multiple times before and after the peer reviews until I feel it is ready to be merged.",branching strategy,self appreciation,
121,I run the test suite to ensure no obvious errors are in my pull request.  I also discuss the PR on IRC in general terms prior to starting my work.,testing,discussion,
122,"lint type tools, unittests, rechecking diff.",static analysis,testing,code review - self
123,I just check to see if the change has a globally beneficial reason for being a part of the trunk codebase.,makes sense,,
124,Have specs running and comments on the pull request.,testing,discussion,
125,My boss check my commits right before,testing - peer,,
126,I just know when the quality is not good. :-),self appreciation,,
127,I made sure the tests passed and the code was clean,testing,code quality,
128,I review the diff,code review - self,,
129,x,,,
130,If time permits - testing in the local production shinken.,testing - sandbox,,
131,"Look at tests passing, review code to refactor as possible, check PHPdoc, ...",testing,code review - self,static analysis
132,Testing,testing,,
133,"I do basic quailty assessments against my commits. (Such as projects guidelines, language specific requirements and general best practices)",project compliance,standard practices,
134,.,,,
135,Manual Testing,testing,,
136,"Very businesslike and constructive. Time goes, sometimes more rapidly, as well as longer. If other people are not busy with other projects...",,,
137,"Test it on staging of my own project, evaluate shortcomings, push additional commits to feature branch if necessary.",testing - sandbox,branching strategy,
138,Running tests,testing,,
139,"I run local test- and benchmark-suites.  I run `hlint`, which is a Haskell lint tool.  I rebuild and check the documentation locally.  When the pull request is created it is validated using travis-ci.",testing,static analysis,continuous integration
140,Matching the coding standards of the project.,project compliance,,
141,testing locally + executing a local build,testing,building,
142,Following clean code principle and checking Code Style,standard practices,static analysis,
143,I get it reviewed by peers.,code review - peer,,
144,I don't,no assessment,,
145,DMD has a test-suite so I'll create a test case.,testing,,
146,"Passing tests, suitable in code documentation, suitable commit message.    Easy to merge (atomic commit, able to merge at time of sending).",testing,documentation,commit quality
147,I'm just careful in the way I code. I compile and test what I can (but do not write formal tests or contribute my test code),self appreciation,testing - manual,
148,integrated testing and code analysis,testing,static analysis,
149,Code formatting and unit test cases.,code quality,testing,
150,"Testing it on my projects, products",testing - manual,,
151,Code reviews by other developers and continuous integration.,code review - peer,continuous integration,
152,"It testes against unit tests, performance side effects, backward compatibility.",testing,,
153,"tests, peer-review",testing,,
154,"Unit tests, local testing, self code review",testing,code review - self,
155,"cppcheck, code review",static analysis,code review - self,
156,Tests,testing,,
157,I test it manually and often I write automatized tests,testing - manual,testing,
158,Manual testing,testing - manual,,
159,Checking code changes via diff on github.,code review - self,,
160,Test it on device,testing - manual,,
161,"1) By following the contribution guide lines for a PR of that Repository.  2) I follow rails style and ruby style guide.  3) I follow the similar changes regarding of my PR  4) I dry up my code as much as possible .  5) I always attach a test code so that it can test my code broke something or not  6) I follow code convention(ie Thoughtbot, Railscast and other blogs)  7) Most important my code should be readable/neat and clean to Others.",project compliance,code quality,testing
162,codereview + codesniffer + ...,static analysis,,
163,We're using Grunt modules like jshint to perform static code analysis and ensure that the code fulfills some requirements.,static analysis,,
164,-,,,
165,Unit tests,testing,,
166,Test it,testing,,
167,Bla,,,
168,analyzing and testing,testing,,
169,Does what I want. Hopefully there's enough tests to ensure that. Changes shouldn't make the codebase noticeably messier.,testing,self appreciation,
170,By running the associated project unit tests,testing,,
171,"Are no side-effects produced, is it bug free, is it easy to read.",testing - manual,code quality,
172,"Used ""Atlassian FishEye analysis with Crucible code review""  to create review in my team for all member can review the PR before put to gitbub and run test again.",code review - peer,testing,
173,Usually I review it on github through the Http page,code review - after,,
174,We use CI server for testing a code before merge.,continuous integration,,
175,talk to the owner of the repo,discussion,,
176,following standard practices in a consistent way and including (self)documentation as much and practically possible.,standard practices,,
177,"Does it work, meet the guidelines. Etc.",testing - manual,project compliance,
178,"Atomated Tests, and checking if the modification cover all points in the request (like as Development Guided By Contract)",standard practices,,
179,Tests and comments.,testing,documentation,
180,Run code to verify that change behaves as expected. gitk and friends to review individual commits.,testing - manual,code review - self,
181,"I run the code myself, and test it manually.",testing - manual,testing,
182,testers test the code before merging,testing - manual,,
183,"Unit tests and integration tests pass, and project works properly in core supported browsers.",testing,testing - manual,
184,"Descriptive and clear commit message, small and isolated changes, manually tested",commit quality,self contained,testing - manual
185,"quite good, but could be better",,,
186,Test all the new use cases and make sure previous tests are not broken.,testing,,
187,I read again the diff and message of each commit,code review - self,,
188,Test,testing,,
189,"Run tests, review diffs",testing,code review - self,
190,Add tests to test suite that fail before the fix/feature. Also observe behavior in browser (this is a charting tool).,testing,testing - manual,
191,No method,,,
192,Personal experience,self appreciation,,
193,"Run tests, wait for feedback by project owner",testing,discussion,
194,"By starting to open the pull request, and then flicking back through it to finally review all my changes just before I submit",code review - self,,
195,review the code myself  execute tests,code review - self,testing,
196,I try to look at it with a fresh perspective,code review - self,,
197,Whether the tests pass and whether it meets the coding standards of the project,testing,project compliance,
198,tests.  myself and friends (irc),testing,testing - peer,
199,"By having existing tests pass, new tests included, overall code style and  organization consistent, and being aware on how ot improve pull request further.",testing,self contained,self appreciation
200,"I only work on translations, so the ""quality"" of them is more or less common sense / good orthography.",self appreciation,,
201,"Verify source code formatting, review docs changes. Verify commit message is descriptive for the change.",project compliance,commit quality,
202,Run diffs to ensure that all changes committed are necessary and intended.,code review - self,,
203,Run all tests (unit and integration) using maven. Nothing must be broken.,testing,,
204,"I check if it is based on relatively new upstream commit, use meaningful commit messages, manually test if program works",branching strategy,commit quality,testing - manual
205,"For this particular repository, the format is fairly well-specified, so there isn't much to do.",project compliance,,
206,run unit tests,testing,,
207,I read it and check that all tests pass.,code review - self,testing,
208,ran the testsuite and ensure the existing tests as well as new tests pass,testing,,
209,Usually by writing tests.,testing,,
210,running the default test / quality tool in the repo,testing,validation scripts,
211,By comparing it with the already existing codebase.,project compliance,,
212,"Does it have tests, does it preserve backwards compat, if there are any changes to the API, is the API still clean and easy to ise",testing,self contained,
213,Run the unit tests.  Run static analysis tools.  Make sure I've updated documentation as appropriate.,testing,static analysis,documentation
214,"tests are passing, coding standards are followed, code is readable and reveals my intent",testing,project compliance,
215,I try if it does what I want. I look if it meets coding standards. I hope reviewers will find my mistakes.,project compliance,code review - after,
216,Works for me,testing - manual,,
217,Mainly - I don't. It's up to the developer who's merging the code to check it for proper code style and quality.,no assessment,,
218,unit tests,testing,,
219,Usually code review,code review - self,,
220,using sonar,static analysis,,
221,"Check manually through Github web interface.(naming, style, etc..)    Maybe I didn't understand correctly, sorry :)",code review - after,project compliance,
222,I do a quick self-review in the compare view,code review - self,,
223,I write tests and review the diff.,testing,code review - self,
224,"1) Does it solve the issue?  2) Does it follow the conventions? (code convention, class licence headers...)",address issue,project compliance,
225,test,testing,,
226,"integrated build testing, my own manual testing, project test suite",continuous integration,testing - manual,testing
227,-,,,
228,Discuss it with the project team on IRC,discussion,,
229,Upload it to a dev environment and perform sanity checks,testing - sandbox,testing - manual,
230,Request the reviewer,,,
231,Coding style (PEP8). Passing tests. Added tests. Documentation.,static analysis,testing,documentation
232,If it is needed to project and is simplifed project then it is good quality.,address issue,,
233,Tests.,testing,,
234,How it aligns with current code base and coding style,project compliance,,
235,Visual review,code review - self,,
236,Run the projects' build script (or tests in case no build script is provided). In case it is necessary run manual/automated acceptance tests.,validation scripts,testing - manual,
237,Unit tests,testing,,
238,"I test it myself. I read over the code and make comments to show my intentions clearly. I write documentation, examples, or tests if they're necessary / helpful. I try to look at what I'm presenting as if someone else had written it and ask myself if I'd hate dealing with the merge or, having the code in my project with respect to functionality, clarity, and conciseness/elegance (in that order).",code review - self,documentation,self appreciation
239,Just making sure everything looks neat and tidy.,self appreciation,,
240,code-review,code review - self,,
241,Personally running project tests and test coverage of any new or changed features before pushing to personal fork. Personal fork is set up to then use TravisCI to run these tests on several environments.,testing,coverage,continuous integration
242,I compare the code against master and review it as if I were reviewing someone else's PR,code review - self,,
243,"I often submit early, before doing much quality-assurance, to make sure I'm on the right track. I then tack that feedback and use it to improve the test suite, refactor code, change APIs, improve documentation, etc.",discussion,,
244,"I run all rake task, before the pull request.",building,,
245,I don't. I'll rework the pull request if rejected.,no assessment,,
246,I would describe my pull request as slightly hacky because the open source project was not well-built.,,,
247,I dogfood for a while to find and fix issues before submitting,testing - manual,,
248,I run tests and visually check the diff for quality commenting and code.,testing,code review - self,
249,I check that it just contains the changes related to what I'm sending,address issue,,
250,Functionality and unit testing.,testing - manual,testing,
251,I usually develop unit tests for the feature developed and also run the all unit tests. I also occasionally test the framework in a real application.,testing,testing - manual,
252,Matching code style and approach. Not changing the architecture the original developers had in mind.  Does it fix what's broken without making the original code more complicated.,project compliance,,
253,"Tests pass, commit messages have descriptive messages, manually verify behavior, ensure inline documentation is up todate.",testing,commit quality,testing - manual
254,"It clearly covers changes being made, only contains commits relevant to one main fix/feature, includes screenshots of proposed changes if applicable, and passes our CI tests",makes sense,self contained,continuous integration
255,Thoroughly tested locally and generally error free.,testing,,
256,"Tests, compilation results, standards",testing,building,project compliance
257,I re-read the changeset,code review - self,,
258,Test coverage,coverage,,
259,"I run and test code with my exact diff, also check the diff by the naked eye",testing,code review - self,
260,"testcase, code review",testing,code review - self,
261,"The project contains full tests for code styles, regression tests and coverage tests. It is controlled by automatic CI system.",continuous integration,coverage,
262,Code review by somebody else.,code review - peer,,
263,try out and check if it works. sometimes unit tests,testing - manual,testing,
264,Writing tests,testing,,
265,Test it in my own project,testing - manual,,
266,"Writing tests and running ""make test"" (if possible).",testing,building,
267,I'll run it by another contributor.,code review - peer,,
268,Check project guidelines,project compliance,,
269,"Tests for project, ensuring new code is tested, checking for code style",testing,project compliance,
270,I check the commit history and run a clean compile ensuring the test suite has no outstanding issues.,self contained,building,
271,"If the project have a test suite, the pull request should have proper test included. Else it should be manually tested. In every case the feature behavior should be described in an issue or in the pull request.",testing,testing - manual,documentation
272,I run the project's test suite and a coding standards checker locally.,testing,static analysis,
273,Self review,code review - self,,
274,second look,code review - self,,
275,Diff and cleanliness,code review - self,code quality,
276,I revert our modified custom branch to master and replay topic on it.,testing - manual,branching strategy,
277,Test software works locally,testing - manual,,
278,Check:  - it works  - it's thoroughly tested  - it's thoroughly documented,testing - manual,testing,documentation
279,git diff,code review - self,,
280,Through various code quality tools and unit tests.,static analysis,testing,
281,"I try to use best practices as I understand them, and am willing to change my pull request if the project owner needs something changed.",standard practices,discussion,
282,"Test coverage,  cleanliness of the code,  are the changes all focused on one feature/improvement, does the build pass in Travis",testing,code quality,continuous integration
283,is everything covered by unit tests?  does it do what the docs say?  does the change make the system better?,testing,documentation,self appreciation
284,Campfire Rule:  I always try to leave the project in a better state than when I found it.,self appreciation,,
285,Testing,testing,,
286,"I often setup demo sites for the community and core team to evaluate my proposed changes. Also, the pull request often sits unmerged while lengthy discussion is held in the issue tracker and mailing list. Getting a new feature in is an iterative process.",testing - sandbox,discussion,
287,I look at the code base.,code review - self,,
288,Tests and documentation included? Code review beforehand also helps,testing,documentation,code review - self
289,- linting  - unit tests  - code style    I try to get another team member's eyes on it early too.,static analysis,testing,code review - peer
290,Check the changes with WinMerge called from the Git Log window of TortoiseGit,code review - self,,
291,compile and test,building,testing,
292,Quick review of the diffs,code review - self,,
293,Ensure that the project compiles and it passes the unit test suite.,building,testing,
294,Code review,code review - self,,
295,"Running it, testing it, and reviewing code consistency with project",testing - manual,project compliance,
296,Test in my own environment.,testing - manual,,
297,Using my ide to check code style and review it a last time before creating a pull request,project compliance,code review - self,
298,With tests and integrating with my project,testing,,
299,"testing, jshint",testing,static analysis,
300,Run tests. QA manually. Discuss it with the team.,testing,testing - manual,discussion
301,Based on whether it completely addresses the required issue.,address issue,,
302,I typically write tests to verify my changes.,testing,,
303,Checking the code identation for the project.  Testing functionality under different enviroments,project compliance,testing - manual,
304,so so,,,
305,"By testing the code extensively, comparing my codestyle to the style mostly used in the project and sometimes giving my code to some fellow programmers for testing.",testing - manual,project compliance,
306,Solving tasks,address issue,,
307,good,,,
308,Peer review,code review - peer,,
309,I make sure code is clean and sensible.,code quality,,
310,Lots of manual testing,testing - manual,,
311,&nbsp;,,,
312,git show,code review - self,,
313,Self test. My features and implementation is small.,testing - manual,,
314,"Reread the code thoroughly, and test it",code review - self,testing,
315,Code Climate and Travis,continuous integration,static analysis,
316,I try the program with my proposal in my computer.,testing - manual,,
317,"passing tests, equal or greater test code coverage, description in pr/issue.",testing,coverage,documentation
318,read their code,,,
319,"I make sure that all tests pass on my branch & I'm following all the coding standards like no trailing whitespace, indentation etc. Also, I request other project members to review my branch before I submit a pull request.",testing,project compliance,code review - peer
320,testing and review with core team,testing,code review - after,
321,"tests, documentation, intuitive feel, interactive use",testing,documentation,self appreciation
322,I really don't know. I tried to do by best. I would expect to be 3.5 to 4 out of 5.,,,
323,"automated tools mostly (flake8 for PEP8 compliance, and acyclomatic complexity, test coverage, etc.)",static analysis,coverage,
324,self reviewing and testing,code review - self,testing,
325,Testing.,testing,,
326,Evaluate the code. Run the tests. Write new tests.,code quality,testing,
327,"Manual and automatic test cases, real-life usage in my own project",testing,testing - manual,
328,-,no assessment,,
329,We have a discussion via an issue about the approach to the problem before I start coding. I request code reviews from the core devs after submitting a pull request to ensure we agree on the implementation,discussion,code review - peer,
330,I read the diff locally and on github and also assess code coverage.,code review - self,coverage,
331,"diff between branches in git, check commit message(s)",code review - self,commit quality,
332,"Not sure what this means, but API changes need documentation and tests should be passing. I won't always run tests across all Scala versions, however.",documentation,testing,
333,The quality of my pull request is fine.,,,
334,"Automated tests, discussions about requirements",testing,discussion,
335,run/write tests if applicable; compare to existing code in project,testing,project compliance,
336,By testing.,testing,,
337,npm test,testing,,
338,testing,testing,,
339,1. New feature or bug is covered by tests.  2. New feature or bug is covered by javadoc.  3. The code analyzer has no serious comments.  4. All tests are successful.  5. The full build is successful.,testing,documentation,static analysis
340,"Checkstyle/unit tests, general sense of beauty of a code",static analysis,self appreciation,
341,I use it in a project,testing - manual,,
342,By running the full test suite + new tests  Checking CI status on Travis or similar,testing,continuous integration,
343,"presence of tests  backwards compatibility  general code quality guidelines (prog patterns, maintainability,no code smells)",testing,code quality,
344,Base is done; open for suggestions and tweaks.,,,
345,Travis tests should be all green,continuous integration,,
346,I review in my own.,code review - self,,
347,"Run entire test suite, deploy to a staging branch. We have Travis CI also.",testing,branching strategy,continuous integration
348,Getting better all the time. Quite good for the moment.,,,
349,Local unit testing if possible,testing,,
350,"Run unit tests, read the code diff.",testing,code review - self,
351,"I put myself in the maintainer's shoes to try and think if the code is useful, necessary, clean, tested, and minimal.",makes sense,code quality,
352,"Code review, testing, and documenting in the PR",code review - self,testing,
353,Test in own environment. Mostly it are small code fixes.,testing - manual,,
354,Using `git diff` to check one last time the changes.,code review - self,,
355,"Check if everything has tests, check commit messages, read over code again.",testing,commit quality,code review - self
356,I read the diff on github,code review - self,,
357,I either add unit-tests or test manually.,testing,testing - manual,
358,The amount of documentation,documentation,,
359,Most are simple; sometimes with tests.,testing,,
360,I run the unit test suite (if any) and check how the source code style fits into the project's preferred style,testing,project compliance,
361,80%,,,
362,"I test them locally, and try to provide the most clean and elegant solution to the problem",testing - sandbox,,
363,"Make sure Everything builds ok, and the system is usable.",building,testing - manual,
364,I don't. This question could be a little more specific.,no assessment,,
365,"I use `git diff` to review each commit before actually commiting. After I made all the commits, they should be clean and according to guidelines and I make my PR.",code review - self,project compliance,
366,I just ensure the test passes,testing,,
367,I test and retest.,testing,,
368,By looking in it??,code review - self,,
369,-,,,
370,Code review. Run all tests.,code review - self,testing,
371,"With unit tests, potentially extending the Travis CI matrix if necessary.",testing,continuous integration,
372,unit tests,testing,,
373,On my own to the best of my knowledge,,,
374,"To be honest, I just go with the flow and try to embrace the code base.",project compliance,,
375,Personal tests,testing - manual,,
376,Why do it? Pull requests are needed to produce code review before the merger.,no assessment,,
377,"Does what it should, code reads well and passing tests.",makes sense,code quality,testing
378,Make sure that unit tests pass.,testing,,
379,tests,testing,,
380,Always try to add at least one test case that breaks with the current master and passes with the submitted fix in case of bug fixes.,testing,,
381,By how I'm feeling about the code; occasionally by requesting code reviews before merging it.,self appreciation,code review - peer,
382,"Try tests, add tests, discuss the code with other project users.",testing,code review - peer,
383,"For example, check whether CI pass or not.",continuous integration,,
384,"I build, run and test the modifications covered by my change.",building,testing - manual,testing
385,Check with project guidelines,project compliance,,
386,.,,,
387,"Minimal impact on original code, with target feature fixed by change",self contained,address issue,
388,The maintainers of the project review my code and so do I.,code review - after,code review - self,
389,"Manual testing of modified features, check appropriate tests have been added, check changes are minimalized, check formatting of new/modified code.",testing,self contained,code quality
390,tests,testing,,
391,Unit tests,testing,,
392,I'm not. It is the responsability of peer reviewer.,no assessment,,
393,Unit tests,testing,,
394,The code is tested by a project leader,code review - peer,,
395,I would write tests but this project has no tests so I incorporated the project into my own project and tested the changes in that context.,testing - manual,,
396,Check tests pass and review the change set.,testing,code review - self,
397,"code review github .what to say ,it is not easy to answer this question.",code review - after,,
398,changes discussed before  make test,discussion,testing,
399,"Others, which have commit access to the repository check the changes if there are any braking changes. If none and the code is working the PR gets normally merged.",code review - after,,
400,"in case of pyload testing is sometimes not very easy, so testing for hosters for example is done by hand",testing,testing - manual,
401,"Trying it out, and reviewing the patch. A good pull request is often short enough that reviewing the diff helps evaluate.",testing - manual,testing,self contained
402,Hood enought,,,
403,I make sure to test it well and follow all style guidelines,testing,project compliance,
404,local testing,testing,,
405,Give my branch to other developers so they can test it,testing - peer,,
406,"It should be easily readable and understandable. by someone not familiar with the feature/fix.    A good way to do it is to make sure the PR only contains something for this feature, not for something else (ie make ""atomic"" PRs/branches)",self contained,,
407,"run the tests, review the code",testing,code review - self,
408,-,,,
409,"Use my own experience, write tests, lint code",self appreciation,testing,static analysis
410,I make sure it works and conforms to the same standards as most of the code,makes sense,project compliance,
411,Test code,testing,,
412,Test,testing,,
413,"run tests, run code linting tools",testing,static analysis,
414,Unit and functional tests.,testing,,
415,"Internal testing, unit testing if possible",testing,,
416,"Compiling in debug mode, running all the examples",static analysis,testing - manual,
417,It should fix the issue without breaking any existing tests. Providing additional tests is a plus.,testing,,
418,Unit Tests,testing,,
419,testing with some saple code,testing,,
420,"I run automated style checkers, look trough the change-set manually and run the tests.",static analysis,code review - self,testing
421,"I run tests, performance tests.",testing,,
422,Checking the general quantity of test and documentation in the code and the code style,testing,documentation,project compliance
423,Testing it does what I claim it does,testing,,
424,developping tests,testing,,
425,"Run tests, own review of code,  check that the scope is right (not too large)",testing,code review - self,self contained
426,Provides a fix and isn't buggy,self contained,,
427,Code review on github,code review - after,,
428,-,,,
429,My own testing,testing,,
430,Tests,testing,,
431,code is checked by two different parties,code review - self,,
432,Unit tests and manual review of the patch.,testing,code review - self,
433,* Code cleanness / soundness  * Enough test coverage  * Documentation  * Proud of it,self contained,testing,documentation
434,"I test my head version quite a lot, and use the file diff to review the code (for example to remove debug code, unrelated code, or things like that)",testing,code review - self,
435,"First I test it, then I check the whole diff for code styling mistakes. After pushing I check again on GitHub to be sure I didn't miss anything.",testing,project compliance,code review - self
436,experience for the initial request   then by comments from my peers,self appreciation,code review - after,
437,Code Review and Unit Test,code review - self,testing,
438,Through exhaustive testing.,testing,,
439,"Tests, binary compatibility script, eyeballing, more eyeballing, often chats with colleagues",testing,code review - self,advice
440,"Run the tests, review the code before commits, (also sometimes use CodeClimate.)",testing,code review - self,static analysis
441,Trying to review the code and run the tests.,code review - self,testing,
442,"Check that all tests still pass, and make sure checkstyle passes.",testing,static analysis,
443,Is it clean and concise?,self contained,,
444,Test the expected result and see if the diff is as small as possible,testing,self contained,
445,"Local testing, unit tests if practical",testing,,
446,manual testing,testing - manual,,
447,"I compare my PR against other previously accepted PRs. I also refer to my own experience on other projects, both personal and work related, to help evaluate the quality of my PR.",project compliance,self appreciation,
448,Manual review and test run.,code review - self,testing,
449,Check against style guidelines,project compliance,,
450,run the tests and use peer to peer software review,testing,code review - after,
451,"If the tests pass, and my coding style mimics the project I'm working on.",testing,project compliance,
452,test scripts  CI (Jenkins),testing,continuous integration,
453,Test coverage of new code and running samples,testing,testing - manual,
454,with a small test program,testing,,
455,"Testing, ask for feedback",testing,advice,
456,Travis,continuous integration,,
457,"I judge it based on what I'd want to see from someone else, but I also know that I will get lots of feedback before the the pull request is accepted.",code review - after,,
458,"unit tests, code review",testing,code review - self,
459,"Testing, rereading the code.",testing,code review - self,
460,First I try to test my changes both on PC and on other devices that can run LK8000. Sometime I write some unittest functions (but I do not commit them) to ensure everything is correct.  Then I ask other contributors to review the code in the branch in my fork that I'm willing use for the pull request.,testing,code review - self,
461,"The packages I contribute to require unit tests plus good documentation. There is a (usually strict) code review process, especially for new committers.",testing,documentation,code review - after
462,Coding guidelines  Unit tests  System tests,project compliance,testing,
463,I perform manual and automatic tests.,testing,testing - manual,
464,Testing,testing,,
465,"CheckStyle, PDM",static analysis,,
466,My best.,,,
467,Test suite,testing,,
468,Manual Test.  Smoke Test.  Occasionally Functional Test.,testing - manual,testing,
469,Tests,testing,,
470,"test feature, run tests (or at least view examples etc).    review the diff on github, usually quite carefully: files changed to avoid mistakes & read the code line changes.",testing,code review - self,
471,"Has good tests. Sometimes more deletions than additions looks good, if I'm fixing a bug rather than implementing new feature.",testing,self appreciation,
472,"Reviewing diffs, testing functionality",code review - self,testing,
473,"I build and run code that uses my changes.  I look at the Travis build results, which builds our code and runs our regression tests.    I also try to ensure that the only changes in the pull request are related to the main issue that the pull request is about.  So I try not to have big code reformats or refactorings in a pull request that is a bug fix.  I save those for separate pull requests.",building,continuous integration,self contained
474,Does it cover my case and proximal cases? Does it run for all those cases? I should really write more unit tests...,self contained,testing - manual,
475,guidelines,project compliance,,
476,Run tests of project.  Follow coding style of file where make change.  Add test case for my change.,testing,project compliance,
477,"Self-review, testing, comparing to HW documentation if any is available.",code review - self,testing,
478,Looking through all changed files in my IDE before commiting.,code review - self,,
479,I test it and make sure that it adheres to the general coding style of the project,testing,project compliance,
480,create/run unit test,testing,,
481,Test locally and check the CI result from travis,testing,continuous integration,
482,hands on/interactive testing,testing - manual,,
483,Code's good. But description is often lacking,,,
484,I verify that I have enough unit tests and that the feature / bug is properly working,testing,testing - manual,
485,By eye.,code review - self,,
486,"Run tests, do my own review",testing,code review - self,
487,"Does it fit with the existing style, do the existing tests run before and after my change, is the change small enough that it can be digested and decided upon, is the change something that would benefit the community",project compliance,testing,self contained
488,test,testing,,
489,I check whether it runs (obviously) and whether or not I deem the code style to be good enough.,testing - manual,self appreciation,
490,"Tests, and manual validation.",testing,testing - manual,
491,"Asking or reviewing it with colleagues, looking at the results of the tests, coverage, codeclimate...",code review - self,testing,static analysis
492,Usual it's great but sometimes it's not so I can't merge with my friend and test in the robot,,,
493,Automated CI testing and code reviews from teammates.,continuous integration,code review - self,
494,Test it on device,testing,,
495,"I review all the changes that will go into the commit, make sure tests pass, and that history is clean.",code review - self,testing,self contained
496,"I test it locally, and run the test suite",testing,,
497,* Has test?  * Not enbug?,testing,,
498,"Look at the functionality from a user's point of view. Is the functionality obvious? Is there enough information to get started with the feature? How does it work? What does it _do_?    Additionally, I like to explain the contents of my changes, and the makes sense behind technical decisions. This forces me to think about whether other developers can understand my code, whether the commits are logical and atomic, and whether the reasons for my implementation decisions are justified. Sometimes I will change things as a result.",self contained,documentation,
499,run test suites,,,
500,Verifying test coverage and extent to which I've documented my code.,testing,documentation,
501,"If multiple commits, does reverting any single one still make sense. Squash into one commit otherwise (easier to see changes)",self contained,,
502,by Ruby style guide; OOP/OOD books.,standard practices,,
503,I just review my changes and if they look good I submit the pull request.,code review - self,,
504,"unit tests, reviews",testing,code review - self,
505,I'm the project owner so it's my own judgement,code review - self,,
506,CI unit tests + manual tests,continuous integration,testing - manual,
507,Testing and review all changed lines,testing,code review - self,
508,Compilation and testing with any test examples,building,testing,
509,"Ussually are minor fixes, so just test by myself.",testing,,
510,This makes no sense to me: the request either works or adds no value,makes sense,,
511,Have tested and often incorporated into a local project,testing,,
512,"I make sure it works on my local copy, and check for any unremoved debugging commands.",self contained,,
513,make sure it satisfies the contributing requirements,project compliance,,
514,Poorly. I'm struggling with git.,,,
515,Is it ready for others to review.,self contained,,
516,test run,testing,,
517,"Tests, review the patch, discuss changes on pull request boards and I'M.",testing,code review - self,discussion
518,"I make sure that my git diff is equal to the current master branch, then only commit my code changes before submitting the pull request.",self contained,,
519,"Manual code review. Running automated test suites. Running pylint,",code review - self,testing,static analysis
520,Test code,testing,,
521,"Ensuring the code compiles, pre-testing the compiled code, comparing my style/methodology to that of the surrounding code",building,project compliance,
522,don't review it.  try to make pull requests small as possible.  Make sure it works though.,self contained,,
523,"Read the diff, test the topic branch tip",code review - self,testing,
524,local testing.,testing,,
525,I review the code + test + docs,code review - self,testing,documentation
526,"Running tests. Assessing code coverage in tests and adding for new features/fixes/changed behaviours.    (After: Travis ci, peer review.)",testing,continuous integration,coverage
527,Diff review,code review - self,,
528,continuous integration (travis-ci) + local tests + git complaining about white space,continuous integration,testing,static analysis
529,"First I do a unit test when its possible and after I test it again with real cases on a test servers and review the codes many times as needed, since submit a request with duplicated code is bad.",testing,testing - sandbox,code review - self
530,"running the test suite, running some ad-hoc tests.  running diff and reviewing the changes.",testing,code review - self,
531,Test cases,testing,,
532,Good,,,
533,"If my code doesn't break anything, and isn't itself broken, i'm happy.",building,,
534,By running linting utilities,static analysis,,
535,"I program like an almighty deity. I do not ""assess"" my code",no assessment,,
536,"Clean history, has tests, commented and documented code",self contained,testing,documentation
537,"Check test, documentation, and comments in the code. Run test suite.",testing,documentation,
538,I always try to include tests and integrate the project into a real-world problem,testing,address issue,
539,"Linting, running existing tests.",static analysis,testing,
540,"Write clean code, verify, test",testing,code review - self,
541,I don't,no assessment,,
542,Check the guidelines and try to put myself in the receivers place,project compliance,,
543,"Test, then check the diff when opening the PR",testing,code review - self,
544,I always pass the tests. travis-ci is useful.  But project owner knows more than test code. Communication on pull request is required.,testing,continuous integration,code review - after
545,PHPCS,static analysis,,
546,"Read it, Go for a walk, then read it over again",code review - self,,
547,"Run the test suite of the package, if it has one, and test the changes manually.",testing,testing - manual,
548,tests,testing,,
549,"Reading my own code multiple times, see if I can simplify things.",code review - self,,
550,???,,,
551,1. I try my best to avoid any code smell in the first place so I don't have to take any special measures to improve the code before sharing it via the pull request. 2. I look at other pull requests to see what folks might probably expect from code submitters.,project compliance,,
552,Whether it works.,makes sense,,
553,Eyeballing,code review - self,,
554,- CI system (Travis)  - peer reviews  - analizing diffs,continuous integration,code review - self,code review - self
555,Just running the code. Sometimes writing tests.,testing - manual,testing,
556,travis,continuous integration,,
557,"By testing it, and having other contributors review the code.",testing,code review - after,
558,We have clear rules about what a good pull request looks like.,project compliance,,
559,"writing tests, using puppet-lint",testing,,
560,I just submit,no assessment,,
561,- Looping at similair pieces of software.   - Creating a WIP PR and ask for feedback.,project compliance,code review - self,
562,"My goal is for the diff to only contain relevant changes.  For example, if I'm adding a new feature, the pull request shouldn't have commits that reformat whitespace in the code.  Additionally, each commit should leave the code so that it at least compiles even if all the tests do not pass.",self contained,building,testing
563,Usually by submitting tests along with the source code changes,testing,,
564,"Unit testing, code reviews",testing,code review - self,
565,"Follow software development best practices and project guidelines to the best of my ability, use IDE to view differences and insure only desired changes are included, execute against latest version of source code plus my changes.",standard practices,project compliance,testing - manual
566,It builds on both Fedora and RHEL,building,,
567,test,testing,,
568,"Try to:    - match code style  - add matching unit tests if they have tests  - match documentation style when updating or adding to docs    Basically, if the author wouldn't be able to tell the difference between their code and your code/tests/docs in a month, that's probably a pull request that'll be accepted. Pull requests that have differing code style, missing tests or lack of documentation (all compared to the levels of those things in the project) are less likely to be accepted.",project compliance,testing,documentation
569,Very good,,,
570,I run a full compile of the entire project on Linux to make sure I haven't broken anything while fixing Windows specific issues,building,,
571,"Review, try to force tests, testing - manually by feching feature brach locally",code review - self,testing,testing - manual
572,Run automatic tests (via continuous integration) and test the software in the target device several times.,testing,continuous integration,
573,good,,,
574,Check that it matches coding standards and passes all tests.,project compliance,testing,
575,Reviewing the code,code review - self,,
576,I test extensively with my local code repository and make sure the code is clean and well-documented. A pull request is always evaluated by the main repository owner before being accepted.,testing,documentation,code review - after
577,Completeness of implementation  Adequate unit tests  Backward compatibility  Cross-browser compatibility  Likely performance implications,self contained,testing,
578,Suricata has a set of automated tests.,testing,,
579,While developing I make sure my commits are small and conform to any project guidelines. I also do a quick review of my branch's change log (git log master..my-branch),self contained,project compliance,
580,nothing,no assessment,,
581,test it,testing,,
582,Local Testing & Applicability,testing,,
583,If it includes tests; testing - manually; reviewing code.,testing,testing - manual,code review - self
584,"Compile locally, check that formatting and PR guidelines are met. Integration tests and Checkstyle and run by PR validation builds.",building,project compliance,static analysis
585,"Test locally, run Unit tests using Travis.org",testing,continuous integration,
586,"Clean, tested. Atomic commits.",testing,self contained,
587,It needs tests that fail before the PR and pass after. Preferably documentation as well.,testing,documentation,
588,I check that each commit contains a logical step in the process. I check for good commit messages.,documentation,self contained,
589,Test to see if it Works for Me.,testing,,
590,CI,continuous integration,,
591,descriptive comment,documentation,,
592,I don't,,,
593,Testing and let the reviewers in the pull request decide if it needs any more work.,testing,code review - after,
594,Review myself,code review - self,,
595,"I preview the diff in GitHub, and may rebase to remove typos, mistakes.",code review - self,,
596,Mainly by eyeballing the diff; I expect fellow contributors to comment on the pull request if there are concerns. The project is small enough not to need extra pre-screening.,code review - self,code review - after,
597,We are using Travis to check the build.,continuous integration,,
598,"Not, really :P  If it works for me, I guess.",,,
599,Test it,testing,,
600,Test myself in QtLinguist preview of translation and in compiled version in build.opensuse.org (openSUSE Build Seervice),testing - manual,building,
601,"I always test it manually, and write coded test cases to prove it solves a problem.",testing - manual,testing,
602,Run tests; ask for feedback,testing,advice,
603,Get it to pass tests. There's code review before pull requests are accepted.,testing,code review - after,
604,"With the help of my ide I check CS, run the test suite, and after submitting the PR I wait for feedback from the automated QC tools, like Scrutinizer or SensioLabs Insight",testing,static analysis,
605,I create / run tests,testing,,
606,I test it,testing,,
607,running automated tests,testing,,
608,"unittest code coverage, documentation for classes and public methods",testing,documentation,
609,I try to submit only tested code. but mostly through pear review after submitting,testing,code review - after,
610,some tests,testing,,
611,write test or test manually,testing,testing - manual,
612,"Review. Add further comments, discuss the importance and weaknesses.",code review - self,,
613,I wait for feedback from other developers,code review - after,,
614,Building and testing,testing,building,
615,More than sending spam.,,,
616,run tests and build with different version of the compiler,testing,building,
617,"Ensure it changes only the code necessary to accomplish its task (e.g. fix a bug, implement a feature, etc.).  Also ensure any substantive change is accompanied by a corresponding test.",self contained,,
618,"Run tests, write test cases.",testing,,
619,I check if it respects the project's guidelines.,project compliance,,
620,"read the code, make sure code is readable, look for any useful tests",code review - self,testing,
621,"If nothing breaks, it's good",building,,
622,review,code review - self,,
623,Through automated aún manual testing,testing,testing - manual,
624,est,,,
625,No rigorous assessment. PR discussions usually critique my code.,code review - after,,
626,Mostly by manual testing,testing - manual,,
627,"Covering it with tests, asking other team members to review it, deploying and testing it on target platform",testing,code review - self,
628,"Passes tests, clearly described in PR description, addresses issue at hand and looks for unintended consequences",documentation,testing,address issue
629,"Unit tests, code review and manual testing. Occasional deployment to a test cluster with a verification suite.",testing,testing - manual,code review - self
630,I apply the same standards I use for any professional code changes.,,,
631,.,,,
632,"Testing compilation, testing executing (unless trivial refactoring), code review of the patch",building,testing - manual,code review - self
633,I submit the pull request and the product owner checks the code.,code review - after,,
634,"With unit and lint tests, and my personal review.",testing,static analysis,code review - self
635,I run the tests and wait for travis to test too.,testing,,
636,Check whether pull requests description is clear and add tests,documentation,testing,
637,"informally, I've always included tests for new function",testing,,
638,Visually review PR.  jsdelivr/jsdelivr is an unique repo since it is essentially a dev -facing archive for a OSS CDN.,code review - self,,
639,Manual testing + having it deployed in our own CI. Unit testing is not very feasible for FAKE due to it's very scripty nature.,testing - manual,continuous integration,
640,"Most of my pull requests are intended to fix specific bugs, so the main thing is:  testing to see if the bug in question is fixed.  I also check for basic compilability, and reread the code to check for obvious interaction problems with other parts of the code base.",testing,building,code review - self
641,"Make sure I have unit tests for all changes. Use the changes in a sample project, or other project.",testing,,
642,"Making sure I have good test coverage (unit and integration tests), comparing my code to existing code.",testing,project compliance,
643,We have extensive test suites (riak is an open source project with a commercial version).  The typical practice is to do manual testing and then encode the most useful of those tests as regression or integration tests.,testing,testing - manual,
644,Run existing unit tests and add new tests if I am adding functionality or the test is missing.,testing,,
645,I test my codes and make sure they are correct and produce the expected results. I amke sure the code is clean and avoid cluttering things.,testing,makes sense,
646,Testing via sandbox deployments.,testing,testing - sandbox,
647,i use it myself,testing - manual,,
648,QA Testing,testing,,
649,"This particular project is developing a technology standard, so it's text. I reread in context.",code review - self,,
650,Check diff,code review - self,,
651,"Test locally on my dev machine and another machine, then submit the pull request, or (less frequently) ask others to try it out from my fork before submitting pull request.",testing,testing - peer,
652,Live testing of the changes/features added by the pull request.,testing - manual,,
653,I don't really. I expect the maintainer will assess it and make recommendations for improvement.,code review - after,,
654,I did not. The community did.,code review - after,,
655,"We have a fixed set of automated tests that I perform manually. Once my code ended up in the master branch, a build server runs those tests with even more combinations of configurations options over night.",testing - manual,building,
656,Run tests to make sure it works.    Visual inspection of the code.,testing,code review - self,
657,testing of the feature,testing,,
658,"I write failing tests, then ensure they pass. Sometimes I seek guidance from the team before beginning.",testing,advice,
659,"If it has good code, with accompanying tests and documentation",code review - self,testing,documentation
660,Run JSHint and unit tests using Grunt,static analysis,testing,
661,"dolphin-emu/dolphin has an extensive CI system that runs on every PR and checks for build issues, tests breakage and some coding style related problems. Then, we require at least one trusted contributor LGTM-ing the PR and no open comments unresolved before merging a PR.",continuous integration,testing,static analysis
662,"More lines added equals more complexity, and requires a greater time reviewing. Additionally each commit should be atomic, meaning a project should be buildable when checking out any commit (IOW a single commit does not depend on a future commit). The code should follow the project style guide, and be well documented but not to the point of creating noise through excessive documentation.",self contained,project compliance,
663,Make sure the relevant tests pass. Make sure it satisfies the project's quality standards.,testing,project compliance,
664,"- I review the review and rework the changes several times, sometimes I submit a preliminary PR for discussion purpose  - I test my work  - If applicable, I write test code alongside the implementation",code review - self,code review - after,testing
665,"If it is a change in the documentation, or an added image, stuff like that, I can't really ""test"" the quality of my requests. If I am 100% sure that the code I've added works (for example, when I modified a line in the default configuration file of a project), I don't test it specifically on my computer. If I am going to contribute something which could have errors, I compile the new code on my own computer/server first to see if I have done a mistake / broken something.",building,testing,
666,"I run the validation scripts provided in the repo (even though I wrote most of them), and make sure that it follows all the conventions of the repo (surrounding code, etc).",project compliance,,
667,"As I've been working on Javascript project, I use JsHint to check if my source code form respects the defined rules",static analysis,,
668,if i have tests that prove things work,testing,,
669,Manually and through tests,code review - self,testing,
670,Run tests and review code 2 or 3 times.,testing,code review - self,
671,Does it pass the tests and contain sufficient documentation for doxygen to autogenerate the docs successfully?,testing,documentation,
672,:),,,
673,Tests,testing,,
674,Test code,testing,,
675,check that it will merge cleanly,commit quality,,
676,using travis / scrutinizer CI services,continuous integration,,
677,"If there are tests, documentation, it works, and is beautiful.",testing,code review - self,
678,I compare my code to the existing codebase.,project compliance,,
679,Testing,testing,,
680,.,,,
681,run tests,testing,,
682,"adding test, running tests",testing,,
683,"It's generally CSS/SASS, so I just discuss with the team and do some basic browser testing",discussion,testing - manual,
684,Running the tests,testing,,
685,I check my commits (diff),code review - self,,
686,"Tests, tests and moar tests",testing,,
687,what issue is this suppose to solve,makes sense,address issue,
688,i test the correction on my main branch,testing,,
689,test,testing,,
690,"Test coverage, feature detail to issue requirement",testing,address issue,
691,Test cases for the project and extend to my request,testing,,
692,good,,,
693,By writing tests to verify that the new feature works correctly,testing,,
694,Hoping it will work and knowing project leaders will review and suggest improvements,code review - after,,
695,Running project's test suite. Reviewing my branch code on github or `git show`.,testing,code review - self,
696,.,,,
697,I review my code.  I check that it does not break anything somewhere else in the project's code base.  I build it.  I test it if possible.,code review - self,building,testing
698,"Testing (both manually and by running unit tests). Generally, we use pull requests as our means of code review, so submitting (but not merging) the pull request is a way to ask for review.",testing,testing - manual,code review - after
699,I always diff the code and manually read the changes.,code review - self,,
700,Manual testing,testing - manual,,
701,Review and test it,code review - self,testing,
702,"automated tests, independent Continuous Integration, manual/visual review, code style validators, static code analysis tools.",testing,building,static analysis
703,"I look through the log and diff to see if there are unnecessary changes (fixes that can be squashed, whitespace issues)",code review - self,,
704,"build must pass, unit/acceptance tests must pass, manual tests before big pull requests.",continuous integration,testing,
705,By using the RSpec testing inside of the project and by following the Travis CI tests,testing,continuous integration,
706,Run all the static analysis tools and do an actual end to end test.,static analysis,testing,
707,Rather good,,,
708,Run existing tests and create new ones,testing,,
709,I run tests,testing,,
710,1) build success/failure  2) tests success/failure  3) does my code give me gas or make me feel morally wrong?,building,testing,self appreciation
711,Unit tests and testing in the target application I'm adding work to support.,testing,,
712,By running phpunit before comitting and reviewing the code in the PR files tab to make sure nothing looks out of place.,testing,code review - self,
713,I compare the branch to master,code review - self,,
714,simplicity and clarity of the commits,self contained,,
715,n/a,,,
716,Check for conformance of the guidelines as well making sure it harmonizes with the code already there.,project compliance,,
717,Unit testing,testing,,
718,Testing,testing,,
719,fully test on my devices.,testing,,
720,I don't. I allow the PR itself to stand for code review,code review - after,,
721,I write unit tests.,testing,,
722,unittesting,testing,,
723,Code audit / code test / code quidelines,code review - self,testing,project compliance
724,"run tests and linters, compare code to the rest of the project",testing,static analysis,
725,Make sure all test passes,testing,,
726,Passing test suite,testing,,
727,"By making sure tests are working as expected and dint break anything,  also glancing through git diff",testing,code review - self,
728,"I compare the code to the rest of the project and make sure I've matched the practices used, I'll do some extensive testing on a few platforms and look through the rest of the code to see if anything seems like it might conflict (in very large projects ""the rest of the code"" would be the module and anything that module directly interacts with)",project compliance,testing,
729,check,,,
730,"tests, guidelines, experience",testing,project compliance,
731,I running tests,testing,,
732,Integration test,testing,,
733,"Travis is set up as a service hook, tests must pass",testing,continuous integration,
734,Passes local testing envrionment,testing,,
735,"There are some basic guidelines, but mostly I don't worry too much about quality checks before sending a pull request. Pull requests are peer-reviewed and can be subsequently modified before they are merged.",code review - after,project compliance,
736,"Code review, rubber ducking if need be, integration tests (unit tests, integration tests, upgrade tests) but it really depends on what the PR is all about: bug fixes tend to be tested against the original bug first, then against a unit test that reproduces the original bug, then stress test the branch with a focused testing suite and let it simmer until the nightlies give the go-ahead (workflow also depends on how critical it is to get the patch out).",testing,,
737,Rarely I build the docs locally.  When I do a small fix through the GitHub online editor I do a preview of the change.,code review - self,,
738,run tests  view diffs,testing,code review - self,
739,Taking a thorough look at it. With my eyes.,code review - self,,
740,Contains tests.,testing,,
741,It usually compiles and works. But not always :-),building,,
742,I perform some live testing. There are no unit tests in  this project.,testing,testing - manual,
743,"PhpUnit, Selenium, normal testing...",testing,,
744,Local testing,testing,,
745,Good.,,,
746,asdf,,,
747,Look for other pull requests on the project.  Ask for guidance from the maintainer.,project compliance,advice,
748,test,testing,,
749,I take a quick look at my code. It's not failproof and certainly not a best practice.,code review - self,,
750,Reviewing it manually,code review - self,,
751,it's mainly bug fixing when I pull request... otherwise I have my own git server for my own (closed source) projects,,,
752,-,,,
753,"in this particular case, i needed a functionality in the repo and made changes to add the feature, tested it and created a pull request",testing,,
754,"I run test suite, I do use automated checking and run the software to see the bug is fixed.",testing,static analysis,
755,"Tests pass, no new functionality without tests, a integration test if it's entirely new functionality surfaced to the user, code is expressive.",testing,,
756,CI server and local tests,testing,continuous integration,
757,Re-read the diff.,code review - self,,
758,Using peer reviews,code review - self,,
759,assess?,,,
760,testing,testing,,
